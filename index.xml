<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>voidint - 个人博客</title>
    <link>http://voidint.github.io/</link>
    <description>Recent content on voidint - 个人博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 17 Oct 2021 14:01:42 +0800</lastBuildDate>
    
        <atom:link href="http://voidint.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>strace简明教程</title>
      <link>http://voidint.github.io/post/tool/strace/</link>
      <pubDate>Sun, 17 Oct 2021 14:01:42 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/tool/strace/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/tool/strace.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;strace&lt;/strong&gt; 是什么？维基百科给出的定义如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;strace 是 Linux 系统下的一个用于诊断、调试和指导用户空间的实用程序。它用于监视和篡改进程与 Linux 内核之间的交互，包括系统调用、信号传递和进程状态的更改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不管什么编程语言写的程序，只要跑在 Linux 系统下，就必然需要与内核交互。某些高级编程语言，在语言或者标准库层面上或许并没有提供直接与内核交互的接口，但那也仅仅是虚拟机或者解释器之类的运行时屏蔽了这部分内容而已。作为运行在操作系统上的一个进程，与内核交互（也就是系统调用）是不可避免的。既然不可避免，当系统调用返回错误或者阻塞时，如何才能定位其中的原因？编程语言层面返回的错误固然能提供一部分信息，但这也属于是&lt;strong&gt;二手信息&lt;/strong&gt;罢了。那怎么获取&lt;strong&gt;一手信息&lt;/strong&gt;并快速定位问题的原因呢？答案就是 strace 。&lt;/p&gt;
&lt;p&gt;不同的 strace 版本功能上存在不少差异，为了避免鸡同鸭讲的情况发生，我把我所使用的 strace 版本放这：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -V&lt;/span&gt;
strace -- version 5.1
Copyright &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 1991-2019 The strace developers &amp;lt;https://strace.io&amp;gt;.
This is free software&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; see the &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; copying conditions.  There is NO
warranty&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; not even &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Optional features enabled: stack-trace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;libdw stack-demangle m32-mpers mx32-mpers
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;strace-选项&#34;&gt;strace 选项&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类别&lt;/th&gt;
&lt;th&gt;选项&lt;/th&gt;
&lt;th&gt;选项值&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Output format&lt;/td&gt;
&lt;td&gt;-o&lt;/td&gt;
&lt;td&gt;目标文件&lt;/td&gt;
&lt;td&gt;将系统调用跟踪信息输出到文件而非 stderr&lt;/td&gt;
&lt;td&gt;strace -o trace.log ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-A&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;与&lt;code&gt;-o&lt;/code&gt;选项一起使用，会将输出以追加的方式写入文件。&lt;/td&gt;
&lt;td&gt;strace -o trace.log -A ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印系统调用时的指令指针&lt;/td&gt;
&lt;td&gt;strace -i  ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-t&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印系统调用时的时间（时、分、秒）&lt;/td&gt;
&lt;td&gt;strace -t ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-tt&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印系统调用时的时间（时、分、秒、微秒）&lt;/td&gt;
&lt;td&gt;strace -tt ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-ttt&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印系统调用时的时间（Unix时间戳、微秒）&lt;/td&gt;
&lt;td&gt;strace -ttt ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-T&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印每个系统调用的耗时&lt;/td&gt;
&lt;td&gt;strace -T ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-y&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印文件描述符所对应的文件名&lt;/td&gt;
&lt;td&gt;strace -y ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-yy&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印与套接字文件描述符相关的协议特定信息，以及与设备文件描述符相关的块/字符设备号。&lt;/td&gt;
&lt;td&gt;strace -yy -e trace=connect,write ping -c 1 &lt;a href=&#34;http://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Statistics&lt;/td&gt;
&lt;td&gt;-c&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;统计每个系统调动的耗时、调用次数、失败数&lt;/td&gt;
&lt;td&gt;strace -c ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Filtering&lt;/td&gt;
&lt;td&gt;-e&lt;/td&gt;
&lt;td&gt;trace=set&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;指定集合中&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=read,write ./a.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=/regex&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;名称与正则表达式匹配&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=/epoll_ ./a.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%file&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;含有文件名参数&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%file ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%process&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;进程管理相关&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%process bash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%network&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;网络相关&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%network ping -c 1 github.com&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%signal&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;信号相关&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%signal bash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%ipc&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;进程间通信相关&lt;/strong&gt;系统调用&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%desc&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;文件描述符相关&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%desc ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;trace=%memory&lt;/td&gt;
&lt;td&gt;跟踪所有&lt;strong&gt;内存相关&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;strace -e trace=%memory ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;signal=set&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;指定信号集合中&lt;/strong&gt;的系统调用&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;read=set&lt;/td&gt;
&lt;td&gt;转储从文件描述符集合中读取的内容（&lt;strong&gt;不会过滤并仅保留 read 系统调用&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;strace -e read=3,4,5 -e trace=read ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;write=set&lt;/td&gt;
&lt;td&gt;转储往文件描述符集合中写入的内容（&lt;strong&gt;不会过滤并仅保留 write 系统调用&lt;/strong&gt;）&lt;/td&gt;
&lt;td&gt;strace -e write=1,3,5 -e trace=write echo &amp;ldquo;hello world&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;raw=set&lt;/td&gt;
&lt;td&gt;不解码&lt;strong&gt;以原生（十六进制）形式显示&lt;/strong&gt;系统调用参数值&lt;/td&gt;
&lt;td&gt;strace -e raw=read -e trace=read,write ls -l /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-P&lt;/td&gt;
&lt;td&gt;文件路径&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;访问指定路径的系统调用&lt;/strong&gt;（可指定多个文件路径）&lt;/td&gt;
&lt;td&gt;strace -P /dev/stdout -P /dev/fd/1 -y ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印详细信息&lt;/td&gt;
&lt;td&gt;strace -v ls /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tracing&lt;/td&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;跟踪&lt;strong&gt;由 fork 、vfork、 clone 等系统调用创建的子进程&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;strace -f -e trace=fork,vfork,clone ./a.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-ff&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;与&lt;code&gt;-o&lt;/code&gt;选项一起使用，会将输出写入名为&lt;code&gt;filename.pid&lt;/code&gt;的文件中（不能与&lt;code&gt;-c&lt;/code&gt;一同使用）。&lt;/td&gt;
&lt;td&gt;strace -o trace.log -ff -f -e trace=clone ./a.out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Startup&lt;/td&gt;
&lt;td&gt;-E&lt;/td&gt;
&lt;td&gt;环境变量名=值&lt;/td&gt;
&lt;td&gt;启动进程时为进程提供额外的&lt;strong&gt;环境变量列表&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;strace -E NAME=voidint -E AGE=24 -e trace=write sh -c &amp;lsquo;echo $NAME;echo $AGE&amp;rsquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;进程ID&lt;/td&gt;
&lt;td&gt;待跟踪的&lt;strong&gt;目标进程ID&lt;/strong&gt;（若要跟踪多个进程，可多次指定&lt;code&gt;-p&lt;/code&gt;选项）&lt;/td&gt;
&lt;td&gt;strace -p 1234 -p 5678&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Miscellaneous&lt;/td&gt;
&lt;td&gt;-V&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;打印 strace 版本信息&lt;/td&gt;
&lt;td&gt;strace -V&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;
&lt;h3 id=&#34;1跟踪程序运行过程中发起的所有的系统调用&#34;&gt;1、跟踪程序运行过程中发起的所有的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace ls&lt;/span&gt;
execve&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/ls&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 0x7ffc202c4e10 /* &lt;span class=&#34;m&#34;&gt;29&lt;/span&gt; vars */&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x55c6f9104000
arch_prctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x3001 /* ARCH_??? */, 0x7ffc285a5640&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EINVAL &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Invalid argument&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
access&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/ld.so.preload&amp;#34;&lt;/span&gt;, R_OK&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/ld.so.cache&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0644, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;39762, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 39762, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f72740d5000
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libselinux.so.1&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\200z\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
lseek&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, 157040, SEEK_SET&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;157040&lt;/span&gt;
......
......
......
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libpthread.so.0&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0pn\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0755, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;320504, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2225344, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f727301c000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273037000, 2093056, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273236000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x1a000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f7273236000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273238000, 13504, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f7273238000
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f72740d1000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f72740cf000
arch_prctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x7f72740d2640&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273a7d000, 16384, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273236000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f727343e000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f72736c2000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273c8b000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f7273eb3000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x55c6f7c2f000, 8192, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f72740df000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
munmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f72740d5000, 39762&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
set_tid_address&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f72740d2910&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;         &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2351897&lt;/span&gt;
set_robust_list&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f72740d2920, 24&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGRTMIN, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f72730228f0, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_SIGINFO, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f727302eb20&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, NULL, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGRT_1, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f7273022980, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_SIGINFO, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f727302eb20&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, NULL, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_UNBLOCK, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;RTMIN RT_1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, NULL, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
prlimit64&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0, RLIMIT_STACK, NULL, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;rlim_cur&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;8192*1024, &lt;span class=&#34;nv&#34;&gt;rlim_max&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;RLIM64_INFINITY&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
statfs&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/sys/fs/selinux&amp;#34;&lt;/span&gt;, 0x7ffc285a5590&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
statfs&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/selinux&amp;#34;&lt;/span&gt;, 0x7ffc285a5590&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x55c6f9104000
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x55c6f9125000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x55c6f9125000
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/proc/filesystems&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0444, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;nodev\tsysfs\nnodev\trootfs\nnodev\tr&amp;#34;&lt;/span&gt;..., 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;327&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
access&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/selinux/config&amp;#34;&lt;/span&gt;, F_OK&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/locale-archive&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/share/locale/locale.alias&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0644, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2997, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;# Locale name alias data base.\n#&amp;#34;&lt;/span&gt;..., 4096&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2997&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 4096&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
......
......
......
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/en_US.UTF-8/LC_CTYPE&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/en_US.utf8/LC_CTYPE&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0644, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;337024, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 337024, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f7274075000
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TCGETS, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;B38400 opost isig icanon &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TIOCGWINSZ, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ws_row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;48, &lt;span class=&#34;nv&#34;&gt;ws_col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;204, &lt;span class=&#34;nv&#34;&gt;ws_xpixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2856, &lt;span class=&#34;nv&#34;&gt;ws_ypixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1632&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_NONBLOCK&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_DIRECTORY&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFDIR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0550, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;4096, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getdents64&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, /* &lt;span class=&#34;m&#34;&gt;26&lt;/span&gt; entries */, 32768&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;800&lt;/span&gt;
getdents64&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, /* &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; entries */, 32768&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0620, &lt;span class=&#34;nv&#34;&gt;st_rdev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;makedev&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x88, 0x1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin  check.sh  go  install.sh  l&amp;#34;&lt;/span&gt;..., 76bin  check.sh  go  install.sh  linuxc  valgrind  valgrind-3.17.0  workspace
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;76&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
exit_group&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; ?
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;是不是很惊讶，一个 ls 命令竟然产生了这么多的系统调用（当然其中也包含了一部分 strace 进程 fork 和 execve 目标程序的系统调用）。其中，有不少内容我做了适当省略，的确是输出太多。&lt;/p&gt;
&lt;h3 id=&#34;2跟踪已运行进程实时发起的系统调用&#34;&gt;2、跟踪已运行进程实时发起的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -p $(pidof rsyslogd)&lt;/span&gt;
strace: Process &lt;span class=&#34;m&#34;&gt;994&lt;/span&gt; attached
&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, NULL, NULL, NULL, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;tv_sec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;212, &lt;span class=&#34;nv&#34;&gt;tv_usec&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;794547&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此处以守护进程 rsyslogd 为例，尝试去跟踪该进程的系统调用。一般线上问题排查场景也是附加到一个正在运行的进程上，观察该进程的系统调用，看是否有错误发生，看是否某个系统调用执行时间过长等。&lt;/p&gt;
&lt;h3 id=&#34;3统计每个系统调动的耗时调用次数失败数&#34;&gt;3、统计每个系统调动的耗时、调用次数、失败数&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -c ping -c 1 github.com&lt;/span&gt;
PING github.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 56&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;84&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; bytes of data.
&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt; bytes from 10.23.253.91 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;nv&#34;&gt;icmp_seq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.845 ms

--- github.com ping statistics ---
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; packets transmitted, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; received, 0% packet loss, &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; 0ms
rtt min/avg/max/mdev &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.845/0.845/0.845/0.000 ms
% &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt;     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 16.82    0.000144           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;71&lt;/span&gt;           mmap
 15.54    0.000133           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt; openat
 13.43    0.000115           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;42&lt;/span&gt;           mprotect
  8.64    0.000074           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;           &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt;
  7.01    0.000060          &lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           sendmmsg
  6.43    0.000055           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;53&lt;/span&gt;           close
  5.72    0.000049           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;47&lt;/span&gt;           fstat
  5.49    0.000047           &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; socket
  3.62    0.000031           &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; connect
  2.92    0.000025           &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;           sendto
  2.69    0.000023           &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;           munmap
  2.10    0.000018           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;29&lt;/span&gt;           lseek
  1.75    0.000015           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;11&lt;/span&gt;           setsockopt
  0.93    0.000008           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;           poll
  0.82    0.000007           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;           recvfrom
  0.70    0.000006           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;           write
  0.70    0.000006           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;           ioctl
  0.70    0.000006           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;7&lt;/span&gt;           capget
  0.47    0.000004           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           stat
  0.47    0.000004           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;           rt_sigaction
  0.47    0.000004           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;           capset
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;           brk
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;           rt_sigprocmask
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; access
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           setitimer
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;           getsockname
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;           getsockopt
  0.23    0.000002           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           futex
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           getpid
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;15&lt;/span&gt;           recvmsg
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           uname
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           setuid
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           geteuid
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           prctl
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; arch_prctl
  0.12    0.000001           &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           prlimit64
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt;
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           execve
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;           getuid
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; statfs
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           set_tid_address
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;           ppoll
  0.00    0.000000           &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           set_robust_list
------ ----------- ----------- --------- --------- ----------------
100.00    0.000856                   &lt;span class=&#34;m&#34;&gt;497&lt;/span&gt;        &lt;span class=&#34;m&#34;&gt;23&lt;/span&gt; total
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;4跟踪指定名称的系统调用&#34;&gt;4、跟踪指定名称的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=read,write ls /&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\200z\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0 \0\0\0\5\0\0\0GNU\0\1\0\0\300\4\0\0\0\30\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 48&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0 \0\0\0\5\0\0\0GNU\0\1\0\0\300\4\0\0\0\30\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 48&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\300\30\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\3008\2\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\200#\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0\20\0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 32&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;32&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\300\20\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0pn\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;nodev\tsysfs\nnodev\trootfs\nnodev\tr&amp;#34;&lt;/span&gt;..., 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;327&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;# Locale name alias data base.\n#&amp;#34;&lt;/span&gt;..., 4096&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2997&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 4096&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin  boot  dev\tetc  home  lib\tli&amp;#34;&lt;/span&gt;..., 100bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如今这个社会不同于古代社会，信息过载让人眼花缭乱，因此信息的过滤提炼变得尤为重要。而&lt;code&gt;-e&lt;/code&gt;选项就是 strace 工具提供的最重要的过滤选项。对于想要跟踪特定的某几个系统调用的需求，只需要指定&lt;code&gt;-e trace=syscall1,syscall2,syscall3&lt;/code&gt;的选项，那么输出的内容将只会保留你所指定的那三个系统调用，其它无关系统调用均不会被展示。&lt;/p&gt;
&lt;h3 id=&#34;5跟踪匹配正则表达式的系统调用&#34;&gt;5、跟踪匹配正则表达式的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=/get ping -c 1 github.com&lt;/span&gt;
capget&lt;span class=&#34;o&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;_LINUX_CAPABILITY_VERSION_3, &lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
capget&lt;span class=&#34;o&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;_LINUX_CAPABILITY_VERSION_3, &lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;effective&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_CHOWN|1&amp;lt;&amp;lt;CAP_DAC_OVERRIDE|1&amp;lt;&amp;lt;CAP_DAC_READ_SEARCH|1&amp;lt;&amp;lt;CAP_FOWNER|1&amp;lt;&amp;lt;CAP_FSETID|1&amp;lt;&amp;lt;CAP_KILL|1&amp;lt;&amp;lt;CAP_SETGID|1&amp;lt;&amp;lt;CAP_SETUID|1&amp;lt;&amp;lt;CAP_SETPCAP|1&amp;lt;&amp;lt;CAP_LINUX_IMMUTABLE|1&amp;lt;&amp;lt;CAP_NET_BIND_SERVICE|1&amp;lt;&amp;lt;CAP_NET_BROADCAST|1&amp;lt;&amp;lt;CAP_NET_ADMIN|1&amp;lt;&amp;lt;CAP_NET_RAW|1&amp;lt;&amp;lt;CAP_IPC_LOCK|1&amp;lt;&amp;lt;CAP_IPC_OWNER|1&amp;lt;&amp;lt;CAP_SYS_MODULE|1&amp;lt;&amp;lt;CAP_SYS_RAWIO|1&amp;lt;&amp;lt;CAP_SYS_CHROOT|1&amp;lt;&amp;lt;CAP_SYS_PTRACE|1&amp;lt;&amp;lt;CAP_SYS_PACCT|1&amp;lt;&amp;lt;CAP_SYS_ADMIN|1&amp;lt;&amp;lt;CAP_SYS_BOOT|1&amp;lt;&amp;lt;CAP_SYS_NICE|1&amp;lt;&amp;lt;CAP_SYS_RESOURCE|1&amp;lt;&amp;lt;CAP_SYS_TIME|1&amp;lt;&amp;lt;CAP_SYS_TTY_CONFIG|1&amp;lt;&amp;lt;CAP_MKNOD|1&amp;lt;&amp;lt;CAP_LEASE|1&amp;lt;&amp;lt;CAP_AUDIT_WRITE|1&amp;lt;&amp;lt;CAP_AUDIT_CONTROL|1&amp;lt;&amp;lt;CAP_SETFCAP|1&amp;lt;&amp;lt;CAP_MAC_OVERRIDE|1&amp;lt;&amp;lt;CAP_MAC_ADMIN|1&amp;lt;&amp;lt;CAP_SYSLOG|1&amp;lt;&amp;lt;CAP_WAKE_ALARM|1&amp;lt;&amp;lt;CAP_BLOCK_SUSPEND|1&amp;lt;&amp;lt;CAP_AUDIT_READ, permitted=1&amp;lt;&amp;lt;CAP_CHOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_DAC_OVERRIDE|1&amp;lt;&amp;lt;CAP_DAC_&lt;/span&gt;READ_SEARCH&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_FOWNER|1&amp;lt;&amp;lt;CAP_F&lt;/span&gt;SETID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_KILL|1&amp;lt;&amp;lt;CAP_&lt;/span&gt;SETGID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_SETUID|1&amp;lt;&amp;lt;CAP_SET&lt;/span&gt;PCAP&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_LINUX_IMMUTABLE|1&amp;lt;&amp;lt;CAP_NET_BIND_SERVICE|1&amp;lt;&amp;lt;CAP_NET_BROADCAST|1&amp;lt;&amp;lt;CAP_NET_ADMIN|1&amp;lt;&amp;lt;CAP_NET_RAW|1&amp;lt;&amp;lt;CAP_IPC_LOCK|1&amp;lt;&amp;lt;CAP_IPC_OWNER|1&amp;lt;&amp;lt;CAP_SYS_MODULE|1&amp;lt;&amp;lt;CAP_SYS_RAWIO|1&amp;lt;&amp;lt;CAP_SYS_CHROOT|1&amp;lt;&amp;lt;CAP_SYS_PTRACE|1&amp;lt;&amp;lt;CAP_SYS_PACCT|1&amp;lt;&amp;lt;CAP_SYS_ADMIN|1&amp;lt;&amp;lt;CAP_SYS_BOOT|1&amp;lt;&amp;lt;CAP_SYS_NICE|1&amp;lt;&amp;lt;CAP_SYS_RESOURCE|1&amp;lt;&amp;lt;CAP_SYS_TIME|1&amp;lt;&amp;lt;CAP_SYS_TTY_CONFIG|1&amp;lt;&amp;lt;CAP_MKNOD|1&amp;lt;&amp;lt;CAP_L&lt;/span&gt;EASE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_AUDIT_WRITE|1&amp;lt;&amp;lt;CAP_AUDIT_&lt;/span&gt;CONTROL&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_SETFCAP|1&amp;lt;&amp;lt;CAP_MAC_OVERRIDE|1&amp;lt;&amp;lt;CAP_MAC_ADMIN|1&amp;lt;&amp;lt;CAP_S&lt;/span&gt;YSLOG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_WAKE_ALARM|1&amp;lt;&amp;lt;CAP_&lt;/span&gt;BLOCK_SUSPEND&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_AUDIT_READ, inheritable=0}) = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;capget({version=_LINUX_CAPABILITY_VERSION_3, pid=0}, NULL) = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;getuid()                                = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;getuid()                                = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;geteuid()                               = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;capget({version=_LINUX_CAPABILITY_VERSION_3, pid=0}, NULL) = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;capget({version=_LINUX_CAPABILITY_VERSION_3, pid=0}, {effective=0, permitted=1&amp;lt;&amp;lt;CAP_&lt;/span&gt;NET_ADMIN&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_NET_RAW, inheritable=0}) = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;capget({version=_LINUX_CAPABILITY_VERSION_3, pid=0}, NULL) = 0
&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;capget({version=_LINUX_CAPABILITY_VERSION_3, pid=0}, {effective=1&amp;lt;&amp;lt;CAP_NET_RAW&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;permitted&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;CAP_NET_ADMIN|1&amp;lt;&amp;lt;CAP_NET_&lt;/span&gt;RAW, &lt;span class=&#34;nv&#34;&gt;inheritable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;35064&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.182.41&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_RCVBUF, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;131072&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
PING github.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 56&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;84&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; bytes of data.
getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2480162&lt;/span&gt;
getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2480162&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_SOCKET, SO_PROTOCOL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2480162, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16-&amp;gt;12&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_LIST_MEMBERSHIPS, NULL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_SOCKET, SO_PROTOCOL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2480162, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16-&amp;gt;12&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_LIST_MEMBERSHIPS, NULL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt; bytes from 10.23.253.91 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;nv&#34;&gt;icmp_seq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.694 ms

--- github.com ping statistics ---
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; packets transmitted, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; received, 0% packet loss, &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; 0ms
rtt min/avg/max/mdev &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.694/0.694/0.694/0.000 ms
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;正则表达式是一个强大的工具，它也可以被用于 strace 工具的信息过滤中，&lt;code&gt;-e trace=/regex&lt;/code&gt;选项正是为此功能所设计。&lt;/p&gt;
&lt;h3 id=&#34;6跟踪含有文件名参数的系统调用&#34;&gt;6、跟踪含有文件名参数的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%file ls /&lt;/span&gt;
execve&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/ls&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ls&amp;#34;&lt;/span&gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 0x7ffe731b8868 /* &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt; vars */&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
access&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/ld.so.preload&amp;#34;&lt;/span&gt;, R_OK&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/ld.so.cache&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libselinux.so.1&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libcap.so.2&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libc.so.6&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libpcre2-8.so.0&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libdl.so.2&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libpthread.so.0&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
statfs&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/sys/fs/selinux&amp;#34;&lt;/span&gt;, 0x7ffe4f0c32a0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
statfs&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/selinux&amp;#34;&lt;/span&gt;, 0x7ffe4f0c32a0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;      &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/proc/filesystems&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
access&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/selinux/config&amp;#34;&lt;/span&gt;, F_OK&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/locale-archive&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
......
......
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/en_US.utf8/LC_CTYPE&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
stat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFDIR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0555, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;244, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_NONBLOCK&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_DIRECTORY&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;仔细观察上面的示例可以发现，指定&lt;code&gt;-e trace=%file&lt;/code&gt;选项后，输出的内容拥有一个共同的特点，即均是包含文件名参数的系统调用。&lt;/p&gt;
&lt;h3 id=&#34;7跟踪进程管理相关的系统调用&#34;&gt;7、跟踪进程管理相关的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%process bash&lt;/span&gt;
execve&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/bin/bash&amp;#34;&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 0x7fffbd1b18f0 /* &lt;span class=&#34;m&#34;&gt;28&lt;/span&gt; vars */&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
arch_prctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x3001 /* ARCH_??? */, 0x7fff45b89800&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EINVAL &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Invalid argument&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
arch_prctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x7f213ad03740&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481772&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, 0, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481772&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481772, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b86e50, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481774&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481774, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481774&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b862d0, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481777&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481777, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481777&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b866d0, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481779&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 1&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, 0, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481779&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481779, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b86c50, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481780&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, 0, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481780&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481780, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b86e50, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481782&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, 0, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481782&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481782, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b86e50, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481784&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481784, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481784&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b869d0, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f213ad03a10&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481786&lt;/span&gt;
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2481786, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;WIFEXITED&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; WEXITSTATUS&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; 0&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2481786&lt;/span&gt;
wait4&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;-1, 0x7fff45b868d0, WNOHANG, NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ECHILD &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No child processes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;若是想要跟踪进程管理相关的系统调用，那么&lt;code&gt;-e trace=%process&lt;/code&gt;选项能满足这个需求。具体指代的系统调用主要是创建进程（fork 系列）、执行新程序（exec 系列）、回收子进程（wait 系列）相关的一些列系统调用。&lt;/p&gt;
&lt;h3 id=&#34;8跟踪所有网络相关的系统调用&#34;&gt;8、跟踪所有网络相关的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%network ping -c 1 github.com&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_RAW, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_DGRAM, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_RAW, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_IP, IP_RECVERR, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
sendmmsg&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;[{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg_hdr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;msg_namelen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;msg_iov&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;iov_base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nl\1\0\0\1\0\0\0\0\0\0\6github\3com\0\0\1\0\1&amp;#34;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;iov_len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;28&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;msg_iovlen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1, &lt;span class=&#34;nv&#34;&gt;msg_controllen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;msg_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;msg_len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;28&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg_hdr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;msg_namelen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;msg_iov&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;iov_base&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\364q\1\0\0\1\0\0\0\0\0\0\6github\3com\0\0\34\0\1&amp;#34;&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;iov_len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;28&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;msg_iovlen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1, &lt;span class=&#34;nv&#34;&gt;msg_controllen&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;msg_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;msg_len&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;28&lt;span class=&#34;o&#34;&gt;}]&lt;/span&gt;, 2, MSG_NOSIGNAL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
recvfrom&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;s2&#34;&gt;&amp;#34;nl\201\0\0\1\0\1\0\0\0\0\6github\3com\0\0\1\0\1\300\f\0\1&amp;#34;&lt;/span&gt;..., 2048, 0, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;28-&amp;gt;16&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;44&lt;/span&gt;
recvfrom&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\364q\201\200\0\1\0\0\0\1\0\0\6github\3com\0\0\34\0\1\300\f\0\6&amp;#34;&lt;/span&gt;..., 65536, 0, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;28-&amp;gt;16&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;93&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1025&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.253.91&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;57426&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.182.41&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_RAW, ICMP_FILTER, ~&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;ICMP_ECHOREPLY|1&amp;lt;&amp;lt;ICMP_&lt;/span&gt;DEST_UNREACH&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;ICMP_SOURCE_QUENCH|1&amp;lt;&amp;lt;ICMP_&lt;/span&gt;REDIRECT&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;1&lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;ICMP_TIME_EXCEEDED|1&amp;lt;&amp;lt;ICMP_&lt;/span&gt;PARAMETERPROB&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_IP, IP_RECVERR, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_SNDBUF, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;324&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_RCVBUF, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;65536&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_RCVBUF, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;131072&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
PING github.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 56&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;84&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; bytes of data.
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_TIMESTAMP_OLD, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_SNDTIMEO_OLD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, SOL_SOCKET, SO_RCVTIMEO_OLD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
sendto&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\10\0\2sy\6\0\1)\225ka\0\0\0\0&amp;amp;\274\2\0\0\0\0\0\20\21\22\23\24\25\26\27&amp;#34;&lt;/span&gt;..., 64, 0, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.253.91&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;64&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_IP, IP_RECVERR, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
sendto&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\376j\1\0\0\1\0\0\0\0\0\0\291\003253\00223\00210\7in-add&amp;#34;&lt;/span&gt;..., 43, MSG_NOSIGNAL, NULL, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;43&lt;/span&gt;
recvfrom&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\376j\201\203\0\1\0\0\0\1\0\0\291\003253\00223\00210\7in-add&amp;#34;&lt;/span&gt;..., 1024, 0, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;28-&amp;gt;16&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;120&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_SOCKET, SO_PROTOCOL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_PKTINFO, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2586886, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16-&amp;gt;12&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_LIST_MEMBERSHIPS, NULL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_SOCKET, SO_PROTOCOL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
setsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_PKTINFO, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, 4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockname&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2586886, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;16-&amp;gt;12&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getsockopt&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, SOL_NETLINK, NETLINK_LIST_MEMBERSHIPS, NULL, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt; bytes from 10.23.253.91 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;nv&#34;&gt;icmp_seq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.757 ms

--- github.com ping statistics ---
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; packets transmitted, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; received, 0% packet loss, &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; 0ms
rtt min/avg/max/mdev &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.757/0.757/0.757/0.000 ms
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;-e trace=%network&lt;/code&gt;或者&lt;code&gt;-e trace=%net&lt;/code&gt;是跟踪网络相关系统调用的选项。实际输出的内容远比这个多，这是做了适当省略后的输出。&lt;/p&gt;
&lt;h3 id=&#34;9跟踪所有信号相关的系统调用&#34;&gt;9、跟踪所有信号相关的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%signal sh -c echo voidint&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_BLOCK, NULL, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGCHLD, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGCHLD, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGINT, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGINT, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGQUIT, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGQUIT, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTSTP, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTSTP, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTTIN, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTTIN, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTTOU, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGTTOU, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_BLOCK, NULL, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGQUIT, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_IGN, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigaction&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIGCHLD, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x555e8a87b1b0, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_handler&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIG_DFL, &lt;span class=&#34;nv&#34;&gt;sa_mask&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=[]&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sa_flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SA_RESTORER&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SA_RESTART, &lt;span class=&#34;nv&#34;&gt;sa_restorer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f3ca8e8e880&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_BLOCK, NULL, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_BLOCK, NULL, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;

rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_BLOCK, &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;CHLD&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
rt_sigprocmask&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;SIG_SETMASK, &lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;, NULL, 8&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;10跟踪所有文件描述符相关的系统调用&#34;&gt;10、跟踪所有文件描述符相关的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%desc ls /&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/etc/ld.so.cache&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0644, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;39762, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 39762, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70e79000
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/lib64/libselinux.so.1&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&amp;gt;\0\1\0\0\0\200z\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 832&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;832&lt;/span&gt;
lseek&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, 157040, SEEK_SET&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;157040&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0 \0\0\0\5\0\0\0GNU\0\1\0\0\300\4\0\0\0\30\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 48&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0755, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;168568, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70e77000
lseek&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, 157040, SEEK_SET&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;              &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;157040&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;\4\0\0\0 \0\0\0\5\0\0\0GNU\0\1\0\0\300\4\0\0\0\30\0\0\0\0\0\0\0&amp;#34;&lt;/span&gt;..., 48&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;48&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2266608, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70a31000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7fec70c57000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x26000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70c57000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7fec70c59000, 5616, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70c59000
......
......
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70e75000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70e73000
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/proc/filesystems&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0444, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;nodev\tsysfs\nnodev\trootfs\nnodev\tr&amp;#34;&lt;/span&gt;..., 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;327&lt;/span&gt;
read&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                       &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
......
......
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/en_US.UTF-8/LC_CTYPE&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/lib/locale/en_US.utf8/LC_CTYPE&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFREG&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0644, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;337024, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 337024, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7fec70e19000
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TCGETS, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;B38400 opost isig icanon &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TIOCGWINSZ, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ws_row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;48, &lt;span class=&#34;nv&#34;&gt;ws_col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;204, &lt;span class=&#34;nv&#34;&gt;ws_xpixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2856, &lt;span class=&#34;nv&#34;&gt;ws_ypixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1632&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
openat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AT_FDCWD, &lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;, O_RDONLY&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_NONBLOCK&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;O_DIRECTORY&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFDIR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0555, &lt;span class=&#34;nv&#34;&gt;st_size&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;244, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
getdents64&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, /* &lt;span class=&#34;m&#34;&gt;22&lt;/span&gt; entries */, 32768&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;552&lt;/span&gt;
getdents64&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3, /* &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; entries */, 32768&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0620, &lt;span class=&#34;nv&#34;&gt;st_rdev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;makedev&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x88, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin  boot  dev\tetc  home  lib\tli&amp;#34;&lt;/span&gt;..., 100bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;许多系统调用的参数中都包含了文件描述符，要想过滤出这类系统调用，只要加上&lt;code&gt;-e trace=%desc&lt;/code&gt;选项。&lt;/p&gt;
&lt;h3 id=&#34;11跟踪所有内存相关的系统调用&#34;&gt;11、跟踪所有内存相关的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -e trace=%memory ls /&lt;/span&gt;
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x565257b60000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 39762, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb2a000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb28000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2266608, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e6e2000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e709000, 2093056, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e908000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x26000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e908000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e90a000, 5616, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e90a000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2117944, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e4dc000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e4e0000, 2097152, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e6e0000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x4000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e6e0000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 3942144, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e119000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e2d2000, 2097152, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e4d2000, 24576, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x1b9000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e4d2000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e4d8000, 14080, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e4d8000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2634280, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475de95000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475df18000, 2093056, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e117000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x82000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475e117000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2109744, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475dc91000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475dc94000, 2093056, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475de93000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x2000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475de93000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2225344, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_EXEC, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475da71000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475da8c000, 2093056, PROT_NONE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475dc8b000, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_DENYWRITE, 3, 0x1a000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475dc8b000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475dc8d000, 13504, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_FIXED&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475dc8d000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb26000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 8192, PROT_READ&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb24000
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e4d2000, 16384, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475dc8b000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475de93000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e117000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e6e0000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475e908000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x56525713d000, 8192, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
mprotect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475eb34000, 4096, PROT_READ&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
munmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x7f475eb2a000, 39762&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;           &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                               &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x565257b60000
brk&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x565257b81000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                     &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x565257b81000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 368, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb33000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 26998, PROT_READ, MAP_SHARED, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb2c000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 23, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb2b000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 59, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb2a000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 167, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb23000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 77, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb22000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 34, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb21000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 57, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb20000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 286, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb1f000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 2586930, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475d7f9000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 3316, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb1e000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 54, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eb1d000
mmap&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;NULL, 337024, PROT_READ, MAP_PRIVATE, 3, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0x7f475eaca000
bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;-e trace=%memory&lt;/code&gt;选项用于过滤出内存相关的系统调用。&lt;/p&gt;
&lt;h3 id=&#34;12跟踪访问指定路径的系统调用&#34;&gt;12、跟踪访问指定路径的系统调用&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -P /dev/stdout -P /dev/fd/1  ls /&lt;/span&gt;
strace: Requested path &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/stdout&amp;#39;&lt;/span&gt; resolved into &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/pts/1&amp;#39;&lt;/span&gt;
strace: Requested path &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/fd/1&amp;#39;&lt;/span&gt; resolved into &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/pts/1&amp;#39;&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TCGETS, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;B38400 opost isig icanon &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, TIOCGWINSZ, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ws_row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;48, &lt;span class=&#34;nv&#34;&gt;ws_col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;204, &lt;span class=&#34;nv&#34;&gt;ws_xpixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2856, &lt;span class=&#34;nv&#34;&gt;ws_ypixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1632&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0620, &lt;span class=&#34;nv&#34;&gt;st_rdev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;makedev&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x88, 0x1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin  boot  dev\tetc  home  lib\tli&amp;#34;&lt;/span&gt;..., 100bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;想要确定有哪些系统调用访问了某个或者某些文件路径，用&lt;code&gt;-P&lt;/code&gt;选项就能达到过滤效果。示例中用&lt;code&gt;-P&lt;/code&gt;选项指定了标准输出的两个文件路径，最终输出的内容中也的确如此。&lt;/p&gt;
&lt;h3 id=&#34;13跟踪子进程的系统调用&#34;&gt;13、跟踪子进程的系统调用&lt;/h3&gt;
&lt;p&gt;为演示创建子进程的系统调用，准备了以下C语言程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]before fork&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fork error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Parent process: pid=%d ppid=%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getppid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 为了保证父进程后退出
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Child process: pid=%d ppid=%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getppid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]after fork&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;加上&lt;code&gt;-f&lt;/code&gt;选项后，会跟踪子进程中的系统调用，形如&lt;code&gt;[pid 2600409] xxxxx&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -f -e trace=clone,write,getpid ./a.out&lt;/span&gt;
getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600408&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;[2600408]before fork\n&amp;#34;&lt;/span&gt;, 21&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2600408&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;before fork
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt;
clone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;child_stack&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;NULL, &lt;span class=&#34;nv&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLONE_CHILD_CLEARTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;CLONE_CHILD_SETTID&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;child_tidptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0x7f2cd60217d0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600409&lt;/span&gt;
getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600408&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;Parent process: pid=2600408 ppid&amp;#34;&lt;/span&gt;..., 41Parent process: &lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2600408&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ppid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2600405&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;41&lt;/span&gt;
strace: Process &lt;span class=&#34;m&#34;&gt;2600409&lt;/span&gt; attached
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pid 2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600409&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pid 2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;Child process: pid=2600409 ppid=&amp;#34;&lt;/span&gt;..., 40Child process: &lt;span class=&#34;nv&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2600409&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ppid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2600408&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;40&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pid 2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600409&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pid 2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;[2600409]after fork\n&amp;#34;&lt;/span&gt;, 20&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;after fork
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;pid 2600409&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; +++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
--- SIGCHLD &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;si_signo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;SIGCHLD, &lt;span class=&#34;nv&#34;&gt;si_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;CLD_EXITED, &lt;span class=&#34;nv&#34;&gt;si_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2600409, &lt;span class=&#34;nv&#34;&gt;si_uid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_utime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;si_stime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; ---
getpid&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;                                &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2600408&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1, &lt;span class=&#34;s2&#34;&gt;&amp;#34;[2600408]after fork\n&amp;#34;&lt;/span&gt;, 20&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;2600408&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;after fork
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;14查看进程发起系统调用的时间戳&#34;&gt;14、查看进程发起系统调用的时间戳&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -tt -e trace=socket,bind,connect ping -c 1 github.com&lt;/span&gt;
12:46:14.276448 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
12:46:14.276622 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_RAW, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
12:46:14.276678 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_DGRAM, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
12:46:14.276724 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_RAW, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
12:46:14.276788 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.276824 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
12:46:14.276878 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.276910 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
12:46:14.277477 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.277567 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
12:46:14.279023 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.279089 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1025&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.253.91&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
PING github.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 56&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;84&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; bytes of data.
12:46:14.280138 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.280192 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
12:46:14.287007 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.287131 bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
12:46:14.287324 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
12:46:14.287374 bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt; bytes from 10.23.253.91 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;nv&#34;&gt;icmp_seq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.725 ms

--- github.com ping statistics ---
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; packets transmitted, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; received, 0% packet loss, &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; 0ms
rtt min/avg/max/mdev &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.725/0.725/0.725/0.000 ms
12:46:14.288061 +++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;-tt&lt;/code&gt;选项可以显示每个系统调用的时间信息&lt;/p&gt;
&lt;h3 id=&#34;15查看进程系统调用的耗时&#34;&gt;15、查看进程系统调用的耗时&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -tt -T -e trace=socket,bind,connect ping -c 1 github.com&lt;/span&gt;
12:48:18.669272 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &amp;lt;0.000076&amp;gt;
12:48:18.669449 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_RAW, IPPROTO_ICMP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt; &amp;lt;0.000024&amp;gt;
12:48:18.669506 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_DGRAM, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 EACCES &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;Permission denied&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &amp;lt;0.000023&amp;gt;
12:48:18.669564 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET6, SOCK_RAW, IPPROTO_ICMPV6&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &amp;lt;0.000014&amp;gt;
12:48:18.669630 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000013&amp;gt;
12:48:18.669663 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &amp;lt;0.000018&amp;gt;
12:48:18.669716 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_UNIX, SOCK_STREAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, 0&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000011&amp;gt;
12:48:18.669745 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_UNIX, &lt;span class=&#34;nv&#34;&gt;sun_path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/var/run/nscd/socket&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 110&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; -1 ENOENT &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;No such file or directory&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &amp;lt;0.000012&amp;gt;
12:48:18.670314 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000029&amp;gt;
12:48:18.670377 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;lt;0.000019&amp;gt;
12:48:18.671929 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000035&amp;gt;
12:48:18.672017 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1025&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.253.91&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;lt;0.000015&amp;gt;
PING github.com &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 56&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;84&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; bytes of data.
12:48:18.673281 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_INET, SOCK_DGRAM&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, IPPROTO_IP&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000034&amp;gt;
12:48:18.673357 connect&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_INET, &lt;span class=&#34;nv&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;htons&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;53&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;nv&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;inet_addr&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;10.23.255.1&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;lt;0.000015&amp;gt;
12:48:18.677557 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000031&amp;gt;
12:48:18.677648 bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;lt;0.000012&amp;gt;
12:48:18.677810 socket&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;AF_NETLINK, SOCK_RAW&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_CLOEXEC&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;SOCK_NONBLOCK, NETLINK_ROUTE&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; &amp;lt;0.000013&amp;gt;
12:48:18.677855 bind&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;5, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sa_family&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;AF_NETLINK, &lt;span class=&#34;nv&#34;&gt;nl_pid&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0, &lt;span class=&#34;nv&#34;&gt;nl_groups&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;00000000&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;, 16&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;lt;0.000011&amp;gt;
&lt;span class=&#34;m&#34;&gt;64&lt;/span&gt; bytes from 10.23.253.91 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;10.23.253.91&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: &lt;span class=&#34;nv&#34;&gt;icmp_seq&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ttl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;63&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;0.898 ms

--- github.com ping statistics ---
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; packets transmitted, &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; received, 0% packet loss, &lt;span class=&#34;nb&#34;&gt;time&lt;/span&gt; 0ms
rtt min/avg/max/mdev &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 0.898/0.898/0.898/0.000 ms
12:48:18.678538 +++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;加上&lt;code&gt;-T&lt;/code&gt;选项后，每行系统调用信息的最右侧会标识出该系统调用的耗时，如&lt;code&gt;&amp;lt;0.000076&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;16查看进程系统调用中文件描述符所关联的文件名&#34;&gt;16、查看进程系统调用中文件描述符所关联的文件名&lt;/h3&gt;
&lt;p&gt;细心的你是否发现示例&lt;code&gt;跟踪访问指定路径的系统调用&lt;/code&gt;中倒数第二行输出的&lt;code&gt;close(2)&lt;/code&gt;颇为奇怪，效果上应该仅显示有关标准输出的系统调用，为什么会显示&lt;code&gt;fd=2&lt;/code&gt;的系统调用？下面我们增加一个选项&lt;code&gt;-y&lt;/code&gt;或者&lt;code&gt;-yy&lt;/code&gt;试试。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# strace -P /dev/stdout -P /dev/fd/1 -y ls /&lt;/span&gt;
strace: Requested path &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/stdout&amp;#39;&lt;/span&gt; resolved into &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/pts/1&amp;#39;&lt;/span&gt;
strace: Requested path &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/fd/1&amp;#39;&lt;/span&gt; resolved into &lt;span class=&#34;s1&#34;&gt;&amp;#39;/dev/pts/1&amp;#39;&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&amp;lt;/dev/pts/1&amp;gt;, TCGETS, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;B38400 opost isig icanon &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
ioctl&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&amp;lt;/dev/pts/1&amp;gt;, TIOCGWINSZ, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;ws_row&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;48, &lt;span class=&#34;nv&#34;&gt;ws_col&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;204, &lt;span class=&#34;nv&#34;&gt;ws_xpixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2856, &lt;span class=&#34;nv&#34;&gt;ws_ypixel&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;1632&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
fstat&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&amp;lt;/dev/pts/1&amp;gt;, &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;st_mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;0620, &lt;span class=&#34;nv&#34;&gt;st_rdev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;makedev&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0x88, 0x1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, ...&lt;span class=&#34;o&#34;&gt;})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
write&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&amp;lt;/dev/pts/1&amp;gt;, &lt;span class=&#34;s2&#34;&gt;&amp;#34;bin  boot  dev\tetc  home  lib\tli&amp;#34;&lt;/span&gt;..., 100bin  boot  dev	etc  home  lib	lib64  media  mnt  opt	proc  root  run  sbin  srv  sys  tmp  usr  var
&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;100&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&amp;lt;/dev/pts/1&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
close&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&amp;lt;/dev/pts/1&amp;gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;                    &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
+++ exited with &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; +++
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;看到这个输出，是否就能明白为什么了呢？看来文件描述符&lt;code&gt;1&lt;/code&gt;和&lt;code&gt;2&lt;/code&gt;都指向了标准输出。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;strace(1) — Linux manual page&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/strace.html&#34;&gt;strace 跟踪进程中的系统调用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>socket编程（二）：每个进程服务一个连接</title>
      <link>http://voidint.github.io/post/socket/one_process_per_connection/</link>
      <pubDate>Fri, 01 Oct 2021 20:11:22 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/socket/one_process_per_connection/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/socket/fork-exec-wait.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;在前一篇文章中，我们实现了一个&lt;a href=&#34;https://voidint.github.io/post/socket/one_server_one_client/&#34;&gt;仅能服务一个客户端连接的版本&lt;/a&gt;。很明显，它的局限性非常大，仅能服务一个连接的程序在现实中几乎不可能存在。本篇中，我们将对其稍作改进，实现一个&lt;strong&gt;用多个进程服务多个客户端连接的增强型版本&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;需求每个进程服务一个连接&#34;&gt;需求：每个进程服务一个连接&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;由一个专门的进程监听是否有新的客户端连接。&lt;/li&gt;
&lt;li&gt;若有新的客户端连接，则由监听进程创建一个子进程来专门服务此连接。&lt;/li&gt;
&lt;li&gt;客户端主动断开连接时，为该客户端连接服务的子进程自动退出。&lt;/li&gt;
&lt;li&gt;监听进程为父进程，由其为子进程进行资源回收，避免子进程变为僵尸进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;前置知识点&#34;&gt;前置知识点&lt;/h1&gt;
&lt;h3 id=&#34;1getpidgetppid&#34;&gt;1、getpid、getppid&lt;/h3&gt;
&lt;p&gt;每个进程都会有一个非负整数表示的唯一进程ID，称为&lt;code&gt;pid&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在任意时刻，进程ID在一个操作系统内都是全局唯一的，但是进程ID是允许复用的，进程退出后，原本被其占用的进程ID也将被回收再利用。大多数的 UNIX 操作系统使用了一种称之为&lt;strong&gt;延迟重用&lt;/strong&gt;的算法，即新创建进程的进程ID不与最近退出进程的进程ID重复。这个意图很容易理解，为的就是防止将新创建的进程误以为是已退出的那个进程（毕竟它俩的进程ID是一样的）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/getpid.2.html&#34;&gt;getpid(2)&lt;/a&gt; 系统调用用于获取当前进程ID，而&lt;a href=&#34;https://man7.org/linux/man-pages/man2/getppid.2.html&#34;&gt;getppid(2)&lt;/a&gt;用于获取当前进程的父进程ID。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getppid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表&#34;&gt;参数列表&lt;/h4&gt;
&lt;p&gt;无&lt;/p&gt;
&lt;h4 id=&#34;返回值&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;进程ID号&lt;/p&gt;
&lt;h4 id=&#34;错误&#34;&gt;错误&lt;/h4&gt;
&lt;p&gt;该系统调用总是成功&lt;/p&gt;
&lt;h3 id=&#34;2fork&#34;&gt;2、fork&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/fork.2.html&#34;&gt;fork(2)&lt;/a&gt; 系统调用用于创建新的进程。具体说，是以当前进程为模板复刻了一个新的进程。当前进程称为&lt;strong&gt;父进程&lt;/strong&gt;，而把新进程称为&lt;strong&gt;子进程&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;fork 系统调用比较特别，&lt;strong&gt;父子进程分别返回一次&lt;/strong&gt;，都是从 fork 返回处继续执行。通常，我们会依据返回值判断当前是父进程还是子进程。返回值大于0，表示父进程返回；返回值等于0，表示子进程返回；返回值等于-1，则意味着 fork 调用失败了。这样设计的意图也不难理解。子进程可以随时随地调用 getpid 与 getppid 获得自身进程ID、父进程ID，因此无需以 fork 返回值的方式传递子进程ID这个信息，否则就是多此一举。反过来，如果不通过 fork 返回值的方式告诉父进程刚刚创建的子进程ID，那么父进程将无法获知刚才创建的子进程ID。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/socket/virtual-memory-address-space-layout-2.png&#34; alt=&#34;进程虚拟内存空间布局&#34;&gt;&lt;/p&gt;
&lt;p&gt;fork 后，父子进程拥有相同的程序文本段，但却拥有各自不同的数据段、堆段、栈段等。程序文本段是只读属性，各个进程之间共用一份数据。子进程的数据段、堆段、栈段等从父进程拷贝（写时复制）获得，因此父子进程可以各自修改而不影响其它进程。&lt;/p&gt;
&lt;p&gt;除了上文所述的用户空间的数据拷贝，子进程还从父进程继承了不少属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;父进程打开的文件&lt;/li&gt;
&lt;li&gt;实际用户组ID、实际组ID、有效用户ID、有效组ID&lt;/li&gt;
&lt;li&gt;附加组ID&lt;/li&gt;
&lt;li&gt;进程组ID&lt;/li&gt;
&lt;li&gt;会话ID&lt;/li&gt;
&lt;li&gt;控制终端&lt;/li&gt;
&lt;li&gt;设置用户ID标志和设置组ID标志&lt;/li&gt;
&lt;li&gt;当前工作目录&lt;/li&gt;
&lt;li&gt;根目录&lt;/li&gt;
&lt;li&gt;文件模式创建屏蔽字&lt;/li&gt;
&lt;li&gt;信号屏蔽和安排&lt;/li&gt;
&lt;li&gt;针对任意打开文件描述符的在执行时关闭（close-on-exec）标志&lt;/li&gt;
&lt;li&gt;环境&lt;/li&gt;
&lt;li&gt;连接的共享存储段&lt;/li&gt;
&lt;li&gt;存储映射&lt;/li&gt;
&lt;li&gt;资源限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，子进程也并不是对父进程的全盘拷贝：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fork 的返回值&lt;/li&gt;
&lt;li&gt;不同的进程ID&lt;/li&gt;
&lt;li&gt;不同的父进程ID&lt;/li&gt;
&lt;li&gt;子进程的 tms_utime、tms_stime、tms_cutime 均被设置为0&lt;/li&gt;
&lt;li&gt;父进程设置的文件锁不会被子进程继承&lt;/li&gt;
&lt;li&gt;子进程的未处理的闹钟（alarm）被清除&lt;/li&gt;
&lt;li&gt;子进程的未处理信号集设置为空集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-1&#34;&gt;参数列表&lt;/h4&gt;
&lt;p&gt;无&lt;/p&gt;
&lt;h4 id=&#34;返回值-1&#34;&gt;返回值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;0&lt;/code&gt;：表示是父进程返回，且返回值就是新创建的子进程ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;：表示是子进程返回。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt;：表示调用失败且设置了 errno 值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;错误-1&#34;&gt;错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EAGAIN&lt;/code&gt;: 进程数量已超过当前用户所能创建的进程数上限，或者是进程数量已超过系统设定的全局进程数量上限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ENOMEM&lt;/code&gt;：内存不足&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3waitpid&#34;&gt;3、waitpid&lt;/h3&gt;
&lt;p&gt;进程有生必有死，进程生命周期完结退出后，内核会释放其绝大部分资源，以便供其他进程重新使用。&lt;strong&gt;但进程ID、终止状态、资源使用数据等信息并未直接释放&lt;/strong&gt;，这部分资源需要进程的父进程调用 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/waitpid.2.html&#34;&gt;waitpid(2)&lt;/a&gt; 系统调用来回收。若父进程未回收子进程的这部分资源，那么子进程将变成僵尸进程。&lt;/p&gt;
&lt;p&gt;那僵尸进程危害大吗？由于僵尸进程已经不是一个真正的进程，仅仅是内核中残留的一个数据结构，它无法也不会对信号进行处理，因此&lt;code&gt;kill -9&lt;/code&gt;对它也毫无作用。而系统的进程数是有上限的，大量的僵尸进程就会导致这部分资源的紧张，很可能无法再创建进程。&lt;/p&gt;
&lt;p&gt;那如何将其消灭？如果僵尸进程已经产生，那么消灭它的最好方法就是杀死其父进程，让1号进程成为其父进程，1号进程会尽职尽责地调用 wait 释放其剩余的资源。如果是为了预防僵尸进程的产生，那么只要保证父进程能及时调用 wait、waitpid、waitid 就行了。&lt;/p&gt;
&lt;p&gt;既然僵尸进程有不少危害，那为什么要设计僵尸进程这种机制？子进程退出后直接回收释放所有资源不香吗？为什么非得让父进程 wait 一次？实际上，子进程退出后未释放的资源是给父进程提供一些重要信息用的，比如进程为何退出，是收到信号退出还是正常退出，进程退出码是多少，进程一共消耗了多少系统CPU时间，多少用户 CPU 时间，收到了多少信号，发生了多少次上下文切换，最大内存驻留集是多少，产生多少缺页中断等等。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;waitpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-2&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pid&lt;/code&gt;：表示需要等待的具体子进程&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;pid&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;0&lt;/td&gt;
&lt;td&gt;表示等待进程ID为pid的子进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;表示等待与调用进程（父进程）同一个进程组的所有子进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;td&gt;表示等待任意子进程&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;-1&lt;/td&gt;
&lt;td&gt;等待进程组标识符与pid绝对值相等相等的所有子进程&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;：获取目标进程状态改变信息的指针。若父进程并不关心子进程的状态改变，可设置为 NULL。若未设置为 NULL，则该系统调用返回后可通过以下的宏来获取进程的状态改变信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;宏&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;WIFEXITED(status)&lt;/td&gt;
&lt;td&gt;若子进程通过调用exit(3)或者_exit(2)等方式终止了进程，则返回true，否则为false。通过宏 &lt;strong&gt;WEXITSTATUS(status)&lt;/strong&gt; 获得具体的进程退出码。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIFSIGNALED(status)&lt;/td&gt;
&lt;td&gt;若子进程是接收到了某个信号而终止了进程，则返回true，否则返回false。通过宏 &lt;strong&gt;WTERMSIG(status)&lt;/strong&gt; 获得具体的信号值。通过宏 &lt;strong&gt;WCOREDUMP(status)&lt;/strong&gt; 获得是否已经产生内核转储文件的布尔值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIFSTOPPED(status)&lt;/td&gt;
&lt;td&gt;在设置了 &lt;strong&gt;WUNTRACED&lt;/strong&gt; 标志位的前提下，若子进程并未终止，但是其状态变成了&lt;strong&gt;停止&lt;/strong&gt;（还有机会继续运行），则返回true，否则返回false。通过宏 &lt;strong&gt;WSTOPSIG(status)&lt;/strong&gt; 获得导致进程停止的具体信号值。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WIFCONTINUED(status)&lt;/td&gt;
&lt;td&gt;在设置了 &lt;strong&gt;WCONTINUED&lt;/strong&gt; 标志位的前提下，若处于停止状态的子进程接收到 SIGCONT 信号，则返回true，否则返回false。&lt;strong&gt;Linux 2.6.10及以上版本有效。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;options&lt;/code&gt;：是一个位掩码，可以包含（按位或操作）0个或者多个如下的标志。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;标志&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;阻塞，直到子进程有状态发生改变后才返回。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WNOHANG&lt;/td&gt;
&lt;td&gt;不阻塞，若子进程未发生任何状态改变，则立刻返回（返回值为0）。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WUNTRACED&lt;/td&gt;
&lt;td&gt;设置该标识位后，子进程因收到SIGTTIN、SIGTTOU、SIGTSTP、SIGSTOP等信号后状态变为&lt;strong&gt;停止&lt;/strong&gt;，该系统调用将立刻返回。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WCONTINUED&lt;/td&gt;
&lt;td&gt;设置该标识位后，子进程收到 SIGCONT 信号后状态从停止变成运行，该系统调用将立刻返回。&lt;strong&gt;Linux 2.6.10及以上版本有效。&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;返回值-2&#34;&gt;返回值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;0&lt;/code&gt;：发生了状态改变的子进程ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;：当且仅当设置了 WNOHANG 标志且当前并无任何发生进程状态变化的子进程时返回该值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt;：发生了某个错误并设置 errno 值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;错误-2&#34;&gt;错误&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ECHILD&lt;/code&gt;：子进程不存在。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EINTR&lt;/code&gt;: 未设置 WNOHANG 标志位情况下，被信号所中断。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EINVAL&lt;/code&gt;: options 标志位设置错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4signal&#34;&gt;4、signal&lt;/h3&gt;
&lt;p&gt;信号本质上是一种进程间通信方式。如上文所述，父进程在调用 fork 系统调用创建子进程后，需要 waitpid 回收子进程资源。子进程在退出时，内核会向其父进程发送 SIGCHLD 信号。若父进程事先注册了 SIGCHLD 信号的处理函数（在该函数内调用 waitpid），那么内核就会调用该信号处理函数，也就可以完成对子进程资源的回收了。C标准库提供了 &lt;a href=&#34;https://man7.org/linux/man-pages/man3/signal.3p.html&#34;&gt;signal(3)&lt;/a&gt; 函数，用于注册信号处理函数。&lt;/p&gt;
&lt;p&gt;实际上，UNIX/Linux系统同时提供了 signal 和 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/sigaction.2.html&#34;&gt;sigaction(2)&lt;/a&gt;两个函数。signal 使用更加简单，但是它的行为在不同的 UNIX 系统之间存在差异，而且功能也远不及 sigaction 丰富，因此普遍更推荐后者。只是由于信号相关内容太多，不宜在本篇中过分展开，因此本篇中使用功能简单的 signal 函数来完成 SIGCHLD 信号对应处理函数的注册。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// 或者
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sig_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;sig_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sig_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-3&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sig&lt;/code&gt;：信号（通过&lt;code&gt;kill -l&lt;/code&gt;查看系统支持的信号种类）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;func&lt;/code&gt;：有一个 int 类型入参且无返回值的函数指针。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-3&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;成功返回前一个注册的信号处理动作，失败返回 SIG_ERR 并设置 errno 值。&lt;/p&gt;
&lt;h3 id=&#34;错误-3&#34;&gt;错误&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EINVAL&lt;/code&gt;: 信号错误，或者尝试捕获一个不能捕获的信号，亦或者尝试忽略一个不能忽略的信号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;  1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;  9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 98
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 99
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;100
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;101
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;102
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;103
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;104
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;105
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;106
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;107
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;108
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;109
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;110
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;111
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;112
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;113
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;114
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;115
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;116
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;117
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;118
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;119
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;120
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;121
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;122
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;123
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;124
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;125
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;126
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;127
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;128
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;129
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;130
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;131
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;132
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;133
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;134
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;135
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;136
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;137
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;138
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;139
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;140
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;141
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;142
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;143
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;144
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;145
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;146
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;147
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;148
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// server.c
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/wait.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;handle_sigchld&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;signo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WNOHANG&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WUNTRACED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifdef WCONTINUED &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Linux 2.6.10及以上版本
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;options&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WCONTINUED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(;;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;waitpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errno&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EINTR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 系统调用被信号中断，重新调用一次。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errno&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ECHILD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// ECHILD表示已无子进程，这属于&amp;#39;正常&amp;#39;情况。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;waitpid error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFEXITED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]子进程%d主动调用exit或者_exit退出（退出码为%d）&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WEXITSTATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFSIGNALED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]子进程%d接收到信号后退出（信号为%d）%s产生内核转储文件&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WTERMSIG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WCOREDUMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;且已&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;但未&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFSTOPPED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]子进程%d接收到信号后停止（信号为%d）&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WSTOPSIG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifdef WIFCONTINUED &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;// Linux 2.6.10及以上版本
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WIFCONTINUED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]子进程%d接收到 SIGCONT 信号后继续&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// 父进程负责监听客户端连接，每个连接都通过fork一个子进程的方式进行服务。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Usage: %s port&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;atoi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 监听文件描述符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;socket error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reuseaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;setsockopt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOL_SOCKET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reuseaddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reuseaddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 支持重复绑定
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;bzero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;htons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s_addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;htonl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INADDR_ANY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bind error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;listen error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]The server is running at %s:%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIGCHLD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SIG_IGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 注册SIGCHLD信号回收子进程资源
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 连接文件描述符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;pid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(;;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errno&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EINTR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 注意：被信号所中断，这类错误不是真的&amp;#34;错误&amp;#34;。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;accept error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fork&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;fork error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;// 父进程
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 父进程中用不到cfd，关闭（cfd的引用计数减一）。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;// 子进程
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 子进程中用不到lfd，关闭（lfd的引用计数减一）。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;// 循环读取客户端连接文件描述符将读取的内容转换成大写后返回给客户端
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]Start servicing connection %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(;;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// cfd的引用计数减一
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;read error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 直接退出当前进程，避免子进程再次创建子进程。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 客户端关闭连接（EOF）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// cfd的引用计数减一
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]Connection %d is closed&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 直接退出当前进程，避免子进程再次创建子进程。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]Read: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

                &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toupper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]Write: %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// lfd的引用计数减一
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]The server is shut down&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;验证步骤&#34;&gt;验证步骤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;终端1：启动服务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gcc ./server.c -o a.out
$ ./a.out &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;The server is running at 0.0.0.0:8989
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终端2：通过 nc 或者 telnet 尝试连接服务端&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ nc 127.0.0.1 &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
hello &lt;span class=&#34;c1&#34;&gt;# 输入&lt;/span&gt;
HELLO &lt;span class=&#34;c1&#34;&gt;# 服务端将字符串转成大写后返回&lt;/span&gt;
world &lt;span class=&#34;c1&#34;&gt;# 输入&lt;/span&gt;
WORLD &lt;span class=&#34;c1&#34;&gt;# 服务端将字符串转成大写后返回&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看终端1的服务端输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./a.out &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;The server is running at 0.0.0.0:8989 &lt;span class=&#34;c1&#34;&gt;# 父进程ID为36567&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Start servicing connection &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;# 子进程ID为36620&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: hello 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: HELLO 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: world
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: WORLD
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终端3：向子进程36620依次发送SIGSTOP、SIGCONT、SIGTERM信号&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -SIGSTOP &lt;span class=&#34;m&#34;&gt;36620&lt;/span&gt;
$ &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -SIGCONT &lt;span class=&#34;m&#34;&gt;36620&lt;/span&gt;
$ &lt;span class=&#34;nb&#34;&gt;kill&lt;/span&gt; -SIGTERM &lt;span class=&#34;m&#34;&gt;36620&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次查看终端1的服务端输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./a.out &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;The server is running at 0.0.0.0:8989
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Start servicing connection &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: hello 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: HELLO 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: world
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: WORLD
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到信号后停止（信号为17）                  &lt;span class=&#34;c1&#34;&gt;# 子进程接收到SIGSTOP信号导致进程停止&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到 SIGCONT 信号后继续                   &lt;span class=&#34;c1&#34;&gt;# 子进程接收到SIGCONT信号导致进程重新运行&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到信号后退出（信号为15）但未产生内核转储文件 &lt;span class=&#34;c1&#34;&gt;# 子进程接收到SIGTERM信号导致进程正常退出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终端4：通过 nc 连接服务端并在输入字符串后按下&lt;code&gt;Ctrl+c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ nc 127.0.0.1 &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
voidint
VOIDINT
^C
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次查看终端1的服务端输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./a.out &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;The server is running at 0.0.0.0:8989
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Start servicing connection &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: hello 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: HELLO 
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: world
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36620&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: WORLD
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到信号后停止（信号为17）
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到 SIGCONT 信号后继续
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程36620接收到信号后退出（信号为15）但未产生内核转储文件
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;37110&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Start servicing connection &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;# 新创建的进程37110来服务新的连接&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;37110&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Read: voidint
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;37110&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Write: VOIDINT
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;37110&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;Connection &lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; is closed                      &lt;span class=&#34;c1&#34;&gt;# 探测到客户端连接已主动关闭&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;36567&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;子进程37110主动调用exit或者_exit退出（退出码为0） &lt;span class=&#34;c1&#34;&gt;# 客户端连接主动关闭后为此服务的进程也退出&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《UNIX环境高级编程》&lt;/li&gt;
&lt;li&gt;《Linux/UNIX系统编程手册》&lt;/li&gt;
&lt;li&gt;《Linux环境编程：从应用到内核》&lt;/li&gt;
&lt;li&gt;传智播客Linux网络编程课程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/&#34;&gt;Linux man pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>UNIX/Linux下的exit系列函数</title>
      <link>http://voidint.github.io/post/posix/exit-_exit-_exit-atexit/</link>
      <pubDate>Sun, 26 Sep 2021 10:30:58 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/posix/exit-_exit-_exit-atexit/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/posix/exit.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用C/C++语言在UNIX或者Linux系统下编程，应该都会遇到很多的进程退出相关的函数。有些是C标准库提供的函数，有些是系统调用，有些又是某个系统所独有的系统调用或者函数，并且命名上也极为类似，给人眼花缭乱的感觉。&lt;/p&gt;
&lt;p&gt;这篇文章尝试去总结下其中常见的那几个系统调用和函数，并通过一个例子来展示下基本用法。&lt;/p&gt;
&lt;h1 id=&#34;进程退出系列系统调用函数&#34;&gt;进程退出系列系统调用/函数&lt;/h1&gt;
&lt;h3 id=&#34;1_exit&#34;&gt;1、_exit&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/_exit.2.html&#34;&gt;_exit(2)&lt;/a&gt; 属于 POSIX 系统调用，适用于 UNIX 和 Linux 系统。调用该系统调用后会导致当前进程&lt;strong&gt;直接退出&lt;/strong&gt;，且函数不会返回。内核会关闭该进程打开的文件描述符，若还存在子进程，则交由1号进程领养，再向进程的父进程发送 SIGCHLD 信号。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;noreturn&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 进程退出码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;h3 id=&#34;2exit_group&#34;&gt;2、exit_group&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/exit_group.2.html&#34;&gt;exit_group(2)&lt;/a&gt; 是 &lt;strong&gt;Linux 系统所独有的系统调用&lt;/strong&gt;，调用后会使得进程的所有线程都退出。从 glibc 2.3 开始，_exit 实际上是对 exit_group 系统调用的包装。因此，在Linux系统上两者是等价的。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;linux/unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;exit_group&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-1&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 进程退出码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-1&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;h3 id=&#34;3_exit&#34;&gt;3、_Exit&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man3/_Exit.3p.html&#34;&gt;_Exit(3)&lt;/a&gt; 是C标准库函数，功能上等价于 _exit 系统调用，由 C99 引入。由于是标准库提供的函数，在跨平台移植性上比 _exit 好，建议优先使用。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;_Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-2&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 进程退出码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-2&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;h3 id=&#34;4exit&#34;&gt;4、exit&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man3/exit.3.html&#34;&gt;exit(3)&lt;/a&gt; 是C标准库函数，也是最常用的进程退出函数。它区别于 _exit、_Exit 的地方在于，除了使进程退出（也是通过调用 _exit 系统调用实现的）这个核心功能外，它还会执行一些&lt;strong&gt;前置动作&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;逐个执行用户注册的自定义清理函数（通过 atexit 或者 on_exit 函数注册）&lt;/li&gt;
&lt;li&gt;刷新标准I/O流缓冲区并关闭&lt;/li&gt;
&lt;li&gt;删除由标准库函数 tmpfile 创建的临时文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;noreturn&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-3&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: 进程退出码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-3&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;无返回值&lt;/p&gt;
&lt;h3 id=&#34;5atexit&#34;&gt;5、atexit&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man3/atexit.3.html&#34;&gt;atexit(3)&lt;/a&gt; 是C标准库函数，用于注册进程退出清理函数。该函数在使用时有以下几个注意点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;清理函数的执行顺序与注册顺序相反。&lt;/li&gt;
&lt;li&gt;当进程收到致命信号时，注册的清理函数不会被执行。&lt;/li&gt;
&lt;li&gt;当进程调用 _exit（或者 _Exit）时，注册的清理函数不会被执行。&lt;/li&gt;
&lt;li&gt;当执行到某个清理函数时，若收到致命信号或者清理函数内调用了 _exit（或者 _Exit），那么该清理函数不会返回并且后续的其它清理函数也会被丢弃。&lt;/li&gt;
&lt;li&gt;当同一个清理函数被注册多次，那么正常情况下该清理函数也会被执行相应的次数。&lt;/li&gt;
&lt;li&gt;父进程在调用 fork 前注册了清理函数，那么这些清理函数也会被子进程所继承；若子进程后续又调用了 exec 系列函数，那么子进程所继承的清理函数则会被移除。&lt;/li&gt;
&lt;li&gt;单个进程能够注册的清理函数的数量不会少于32个。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;atexit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-4&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;function&lt;/code&gt;: 用户自定义的进程退出清理函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-4&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;成功返回0，非0值则表示失败。&lt;/p&gt;
&lt;h3 id=&#34;6on_exit&#34;&gt;6、on_exit&lt;/h3&gt;
&lt;p&gt;功能上与 atexit 函数类似的，还有&lt;a href=&#34;https://man7.org/linux/man-pages/man3/on_exit.3.html&#34;&gt;on_exit(3)&lt;/a&gt;函数。它是 &lt;strong&gt;Linux 系统下所独有的函数&lt;/strong&gt;，用于注册进程退出清理函数，区别于 atexit 函数的是，它支持了额外的入参。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;on_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-5&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;function&lt;/code&gt;: 用户自定义的进程退出清理函数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arg&lt;/code&gt;: &lt;code&gt;void *&lt;/code&gt;类型的自定义参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-5&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;成功返回0，非0值则表示失败。&lt;/p&gt;
&lt;h1 id=&#34;示例&#34;&gt;示例&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanup1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;[1]cleanup&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanup2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;[2]cleanup&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cleanup3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;[3]cleanup: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Usage: %s exit|_exit|_Exit|return&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// atexit注册自定义清理函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;atexit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cleanup1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;atexit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cleanup2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;atexit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cleanup2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 多次注册同一个函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 非标准函数on_exit，仅Linux下有效
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// on_exit(cleanup3, (void *)&amp;#34;bye!!!&amp;#34;);
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// on_exit(cleanup3, (void *)&amp;#34;bye!!!&amp;#34;); // 多次注册同一个函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;a newline!&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 向stdout写入带换行符的字符串（行缓冲，遇到换行符的情况下就会调用write系统调用输出内容）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;[stderr]a newline!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 向stderr写入不带换行符的字符串（stderr默认情况下无缓冲，直接调用write系统调用）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;[stdout]forgot a newline!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 向stdout写入不带换行符的字符串（若不刷新缓冲区，则该行内容不会被输出）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;exit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 作用：执行一些前置的清理操作并终止当前进程
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 标准库函数（C89）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// #include &amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 调用exit函数会执行以下操作：
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 1、调用用户注册的清理函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 2、刷新缓冲区并关闭所有标准IO流
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 3、删除临时文件
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 4、调用_exit系统调用
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;_Exit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 作用：直接终止当前进程（含进程的所有线程）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 标准库函数（C99）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// #include &amp;lt;stdlib.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 效果等同于_exit，但移植性更好。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;_Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;_exit&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 作用：直接终止当前进程（含进程的所有线程）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 是对exit_group系统调用的包装（可退出所有线程）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// #include &amp;lt;unistd.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;_exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// main函数return会调用exit函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/&#34;&gt;Linux man pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cplusplus.com/reference/&#34;&gt;C Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《Linux环境编程：从应用到内核》&lt;/li&gt;
&lt;li&gt;《Linux/UNIX系统编程手册》&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>socket编程（一）：一个服务器服务一个客户端</title>
      <link>http://voidint.github.io/post/socket/one_server_one_client/</link>
      <pubDate>Tue, 21 Sep 2021 10:07:50 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/socket/one_server_one_client/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/socket/socket_api.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这个信息爆炸的时代，有关socket编程的文章多如牛毛，而且还在不断产出，隔三差五就能在各种微信公众号之类的地方看到。我也打算写一个有关 socket 编程的系列文章，不是因为我膨胀到觉得比别人写得好，而是为了加深对这部分知识的印象，查漏补缺（下笔之前总会多查些资料，以免写出来贻笑大方是不是），同时也是为了练习书面表达能力。鉴于本人有限的知识水平和写作水平，错误也在所难免，还望指正。&lt;/p&gt;
&lt;p&gt;这个系列的文章主要围绕 Unix/Linux 下的 socket 网络编程，不涉及 Windows （我也不懂）。在形式上，会围绕如何实现一个具体的需求（demo），分析其中需要用到哪些知识点并给出一个可运行的代码实现。虽然 socket 网络编程并不限定于哪种具体的编程语言，可谁让操作系统内核都是C语言实现的呢，所以选用C语言来描述绝对是正确的做法。但是大概率上也不会涉及内核的具体代码实现（因为我不懂），只会涉及到一些基本的函数和系统调用。&lt;/p&gt;
&lt;h1 id=&#34;需求一个服务器服务一个客户端&#34;&gt;需求：一个服务器服务一个客户端&lt;/h1&gt;
&lt;p&gt;具体归纳为以下几条：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动一个进程并在某个端口上监听TCP连接请求。&lt;/li&gt;
&lt;li&gt;读取客户端请求数据，并将读取到的数据转换成大写后返回给客户端。&lt;/li&gt;
&lt;li&gt;服务端仅能同时服务一个客户端，期间若有其它客户端尝试连接，则阻塞。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;socket核心api介绍&#34;&gt;socket核心API介绍&lt;/h1&gt;
&lt;h3 id=&#34;1socket&#34;&gt;1、socket&lt;/h3&gt;
&lt;p&gt;由于类 Unix 系统中&lt;strong&gt;一切皆文件&lt;/strong&gt;的宗旨，socket 编程需要基于一个文件描述符，即 socket 文件描述符。&lt;a href=&#34;https://man7.org/linux/man-pages/man2/socket.2.html&#34;&gt;socket(2)&lt;/a&gt; 系统调用就是用来创建 socket 文件描述符。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;domain&lt;/code&gt;: 协议族/协议域&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;domain&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AF_UNIX, AF_LOCAL&lt;/td&gt;
&lt;td&gt;Unix域协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AF_INET&lt;/td&gt;
&lt;td&gt;IPv4协议&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AF_INET6&lt;/td&gt;
&lt;td&gt;IPv6协议&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;: 套接字类型&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SOCK_STREAM&lt;/td&gt;
&lt;td&gt;字节流套接字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SOCK_DGRAM&lt;/td&gt;
&lt;td&gt;数据包套接字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SOCK_SEQPACKET&lt;/td&gt;
&lt;td&gt;有序分组套接字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SOCK_RAW&lt;/td&gt;
&lt;td&gt;原始套接字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;protocol&lt;/code&gt;: 一般设置为&lt;code&gt;0&lt;/code&gt;，表示系统会根据 domain 和 type 的值自动选择一个合适的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;发生错误返回-1，否则返回socket文件描述符。&lt;/p&gt;
&lt;h3 id=&#34;2bind&#34;&gt;2、bind&lt;/h3&gt;
&lt;p&gt;通过 socket 系统调用创建的文件描述符并不能直接使用，TCP/UDP协议中所涉及的&lt;strong&gt;协议&lt;/strong&gt;、&lt;strong&gt;IP&lt;/strong&gt;、&lt;strong&gt;端口&lt;/strong&gt;等基本要素并未体现，而 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/bind.2.html&#34;&gt;bind(2)&lt;/a&gt; 系统调用就是将这些要素与文件描述符关联起来。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socklen_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-1&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socket&lt;/code&gt;: socket 文件描述符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;address&lt;/code&gt;: 特定协议的地址结构体指针。&lt;/p&gt;
&lt;p&gt;通常，在实际的编程中并不会直接使用结构体&lt;code&gt;struct sockaddr&lt;/code&gt;，而是使用对编程更加友好的的&lt;code&gt;struct sockaddr_in&lt;/code&gt;或者&lt;code&gt;struct sockaddr_in6&lt;/code&gt;，它为&lt;strong&gt;协议&lt;/strong&gt;、&lt;strong&gt;IP&lt;/strong&gt;、&lt;strong&gt;端口&lt;/strong&gt;等要素分别定义了字段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;address_len&lt;/code&gt;: 协议地址结构体长度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-1&#34;&gt;返回值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: 成功&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt;: 失败并设置errno值&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;错误&#34;&gt;错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;: 地址重复绑定（正在使用中）错误。&lt;/p&gt;
&lt;p&gt;对于TCP协议而言，首先发起连接关闭的一方会有一段时间处于&lt;code&gt;TIME_WAIT&lt;/code&gt;状态，而恰巧进程重启依然尝试 bind 相同的地址，那么就会发生 EADDRINUSE 错误。一般的解决方案是地址重用，为 socket 文件描述符设置&lt;code&gt;SO_REUSEADDR&lt;/code&gt;选项。关于此选项，先按下不表。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3listen&#34;&gt;3、listen&lt;/h3&gt;
&lt;p&gt;使用 socket 系统调用创建一个套接字时，它被假设是一个主动套接字（客户端套接字），而调用 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/listen.2.html&#34;&gt;listen(2)&lt;/a&gt; 系统调用就是将这个主动套接字转换成被动套接字，指示内核应接受指向该套接字的连接请求。&lt;/p&gt;
&lt;p&gt;listen 还有项重要使命，就是创建&lt;strong&gt;SYN QUEUE&lt;/strong&gt;和&lt;strong&gt;ACCEPT QUEUE&lt;/strong&gt;，中文译为&lt;strong&gt;未完成连接队列（半连接队列）&lt;strong&gt;和&lt;/strong&gt;已完成连接队列（全连接队列）&lt;/strong&gt;。内核为每一个监听套接字都维护着这两个队列，未完成三次握手的连接暂时存放在未完成队列，已完成三次握手并且服务端还未调用 accept 系统调用处理的连接均存放在已完成连接队列。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backlog&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-2&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socket&lt;/code&gt;: socket 监听文件描述符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;: 设置未完成连接队列和已完成连接队列各自的队列长度（注意：不同的系统对该值的解释会存在差异）。&lt;/p&gt;
&lt;p&gt;Linux系统下，SYN QUEUE 队列长度阈值存放在&lt;code&gt;/proc/sys/net/ipv4/tcp_max_syn_backlog&lt;/code&gt;文件中，ACCEPT QUEUE 队列长度阈值存放在&lt;code&gt;/proc/sys/net/core/somaxconn&lt;/code&gt;文件中。两个队列长度的计算公式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SYN QUEUE 队列的长度：&lt;strong&gt;min(backlog, somaxconn, tcp_max_syn_backlog) + 1 再上取整到 2 的幂次但（最小不能小于16）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ACCEPT QUEUE 队列长度：&lt;strong&gt;min(backlog, somaxconn)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于存在高并发场景的服务端程序，应该将 backlog 适当调大（Nginx和Redis的默认backlog值为511）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-2&#34;&gt;返回值&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;: 成功&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-1&lt;/code&gt;: 失败并设置errno值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4accept&#34;&gt;4、accept&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/accept.2.html&#34;&gt;accept(2)&lt;/a&gt; 系统调用将尝试从&lt;strong&gt;已完成连接队列&lt;/strong&gt;的队头中取出一个连接进行服务，因此产生的队列空缺将从&lt;strong&gt;未完成连接队列&lt;/strong&gt;中取出一个进行补充。若此时已完成连接队列为空，且 socket 文件描述符为默认的阻塞模式，那么进程将被挂起。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socklen_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addrlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-3&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;socket&lt;/code&gt;: socket 监听文件描述符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;addr&lt;/code&gt;: 已连接的对端进程的协议地址。&lt;/p&gt;
&lt;p&gt;若不关注对端信息，可设置为NULL。与 bind 系统调用的参数类似，在实际编程中会使用对编程更加友好的的&lt;code&gt;struct sockaddr_in&lt;/code&gt;或者&lt;code&gt;struct sockaddr_in6&lt;/code&gt;的指针作为入参。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;addrlen&lt;/code&gt;: 地址结构体长度的指针。addr 参数设置为 NULL 时，可设置为 NULL 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-3&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;出错返回-1，否则返回已连接套接字文件描述符。&lt;/p&gt;
&lt;h4 id=&#34;错误-1&#34;&gt;错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EAGAIN/EWOULDBLOCK&lt;/code&gt;: 若&lt;strong&gt;已连接队列为空&lt;/strong&gt;且监听文件描述符被设置为&lt;strong&gt;非阻塞模式&lt;/strong&gt;，那么 errno 将被设置为&lt;code&gt;EAGAIN&lt;/code&gt;或者&lt;code&gt;EWOULDBLOCK&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EINTR&lt;/code&gt;: 若被信号（如&lt;code&gt;SIGCHLD&lt;/code&gt;）中断，那么 errno 将被设置为&lt;code&gt;EINTR&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5connect&#34;&gt;5、connect&lt;/h3&gt;
&lt;p&gt;创建主动套接字的一方（客户端）调用 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/connect.2.html&#34;&gt;connect(2)&lt;/a&gt; 系统调用，可建立与被动套接字的一方（服务端）的连接。&lt;/p&gt;
&lt;p&gt;不同于被动套接字方在调用 listen 之前必须调用 bind 绑定文件描述符与协议地址，主动套接字方在发起连接前，一般都不会调用 bind 绑定文件描述符和协议地址。因为在未绑定情况下，内核会确定源IP地址，并选择一个临时的未被占用的端口作为源端口。如果进行了绑定，所指定的端口又已经被占用，那么 connect 将返回 EADDRINUSE 错误。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socklen_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addrlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-4&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sockfd&lt;/code&gt;: 连接文件描述符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addr&lt;/code&gt;: 特定协议的地址结构体指针。同 bind 系统调用参数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;addrlen&lt;/code&gt;: 协议地址结构体长度。同 bind 系统调用参数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-4&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;成功返回0，失败返回-1并设置 errno 值。&lt;/p&gt;
&lt;h4 id=&#34;错误-2&#34;&gt;错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EADDRINUSE&lt;/code&gt;: 若客户端的连接文件描述符被设置了地址重用选项（SO_REUSEADDR），又调用了 bind 绑定了固定端口，那么重复连接都将返回此错误。一般而言，客户端端口并不会人为指定，而是由内核选择一个未被占用的端口进行连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ECONNREFUSED&lt;/code&gt;: 若客户端的SYN的响应是RST，则表明指定的地址（IP+端口）上并没有进程在等待连接。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;: 若客户端在重试了多次后依然没有收到SYN的响应，那么返回该错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6close&#34;&gt;6、close&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/man2/close.2.html&#34;&gt;close(2)&lt;/a&gt; 一个TCP套接字的默认行为是把该套接字&lt;strong&gt;标记为关闭&lt;/strong&gt;，此后不能再对该文件描述符进行读写操作。TCP协议将尝试发送已排队等待发送到对端的任何数据，发送完毕后发生的是正常的TCP连接终止序列。&lt;/p&gt;
&lt;p&gt;close 会对文件描述符进行引用计数减一操作，引用计数不为零，则文件描述符不会真正关闭。若父进程在使用 &lt;a href=&#34;https://man7.org/linux/man-pages/man2/fork.2.html&#34;&gt;fork(2)&lt;/a&gt; 系统调用前打开了某个文件，那么该文件描述符的引用计数就是2，子进程和父进程在退出前都必须各自调用一次 close 以真正关闭该文件。&lt;/p&gt;
&lt;p&gt;函数原型如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;参数列表-5&#34;&gt;参数列表&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fd&lt;/code&gt;: 待关闭的文件描述符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;返回值-5&#34;&gt;返回值&lt;/h4&gt;
&lt;p&gt;成功返回0，失败返回-1并设置 errno 值。&lt;/p&gt;
&lt;h4 id=&#34;错误-3&#34;&gt;错误&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EINTR&lt;/code&gt;: 若被信号（如&lt;code&gt;SIGCHLD&lt;/code&gt;）中断，那么 errno 将被设置为&lt;code&gt;EINTR&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;代码实现&#34;&gt;代码实现&lt;/h1&gt;
&lt;h3 id=&#34;服务端&#34;&gt;服务端&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;96
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;97
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;98
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// server.c
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;fcntl.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Usage: %s port&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;atoi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 1、创建监听用的文件描述符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;socket error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 2、将监听文件描述符和IP端口信息绑定
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s_addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;htonl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;INADDR_ANY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 表示任意可用IP
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;htons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;// 转换成网络字节序（大端字节序）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bind error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 3、监听文件描述符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;listen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;listen error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;[%d]The server is running at %s:%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getpid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inet_ntoa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 4、接受一个socket连接（从已连接队列中获取一个连接进行服务），并返回连接文件描述符。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientAddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 输入参数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;socklen_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientAddrLen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientAddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 同时作为输入和输出参数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientAddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientAddrLen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;accept error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;inet_ntop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientAddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 将网络字节序的整数IP转换成主机字节序的点分十进制字符串
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientPort&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ntohs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clientAddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;                          &lt;span class=&#34;c1&#34;&gt;// 将网络字节序转换成主机字节序
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Accept client: %s:%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clientPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;// 5、读写连接
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(;;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 初始化buffer
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// 读取客户端信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// zero indicates end of file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The client is closed&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;read error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;read: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toupper&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// 发送信息给客户端
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;write error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;write: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The server is shut down&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;客户端&#34;&gt;客户端&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// client.c
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;ctype.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Usage: %s host port&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;atoi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;socket&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IPPROTO_TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;socket error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_family&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AF_INET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s_addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inet_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 方式一
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// inet_pton(AF_INET, host, &amp;amp;addr.sin_addr.s_addr); // 方式二
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin_port&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;htons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sockaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;connect error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The remote server is connected -&amp;gt; %s:%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BUFSIZ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ssize_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Please enter content:&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strlen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 往内核的发送缓冲区中写入数据（由内核决定何时发送数据）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;write error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;perror&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;read error&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// zero indicates end of file
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The server is shut down&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Reply: %s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The client is closed&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EXIT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;编译&#34;&gt;编译&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ gcc server.c -o server
$ gcc client.c -o client
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;运行&#34;&gt;运行&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;终端1中运行server&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./server &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;3243777&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;The server is running at 0.0.0.0:8989
Accept client: 127.0.0.1:56588
read: hello world

write: HELLO WORLD

The client is closed
The server is shut down
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;终端2中运行client&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ./client 127.0.0.1 &lt;span class=&#34;m&#34;&gt;8989&lt;/span&gt;
The remote server is connected -&amp;gt; 127.0.0.1:8989
Please enter content:
hello world
Reply: HELLO WORLD

Please enter content:
^C
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;UNIX网络编程 卷1：套接字联网API&lt;/li&gt;
&lt;li&gt;传智播客Linux网络编程课程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://man7.org/linux/man-pages/&#34;&gt;Linux man pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hv2tmtVpxhVxr6X-RNWBsQ&#34;&gt;为什么服务端程序都需要先 listen 一下？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>gdb常用命令速查</title>
      <link>http://voidint.github.io/post/c_cpp/gdb/</link>
      <pubDate>Thu, 22 Jul 2021 16:49:24 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/c_cpp/gdb/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/c_cpp/gdb.gif&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;gdb 调试前提是需要保留符号表。对于 C/C++ 等使用 gcc 进行编译的语言，编译时增加&lt;code&gt;-g&lt;/code&gt;选项。对于 go 语言，则增加&lt;code&gt;-ldflags=-compressdwarf=false&lt;/code&gt; 、&lt;code&gt;-gcflags=all=&amp;quot;-N -l&amp;quot;&lt;/code&gt;等选项。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;缩写&lt;/th&gt;
&lt;th&gt;子命令&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;help&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;显示目标命令的帮助信息&lt;/td&gt;
&lt;td&gt;(gdb) h start&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;file&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;加载待调试的可执行文件&lt;/td&gt;
&lt;td&gt;(gdb) file /root/main_cpp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;quit&lt;/td&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;退出gdb&lt;/td&gt;
&lt;td&gt;(gdb) q&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;show&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;listsize&lt;/td&gt;
&lt;td&gt;返回list命令单次显示的源代码行数&lt;/td&gt;
&lt;td&gt;(gdb) show listsize&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;args&lt;/td&gt;
&lt;td&gt;显示调试程序的启动参数&lt;/td&gt;
&lt;td&gt;(gdb) show args&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;listsize&lt;/td&gt;
&lt;td&gt;设置list命令单次显示的源代码行数&lt;/td&gt;
&lt;td&gt;(gdb) set listsize 20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;args&lt;/td&gt;
&lt;td&gt;设置调试程序启动参数&lt;/td&gt;
&lt;td&gt;(gdb) set args &amp;ndash;config /root/config.json&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;显示指定位置的源代码&lt;/td&gt;
&lt;td&gt;(gdb) l&lt;!-- raw HTML omitted --&gt;(gdb) l 7&lt;!-- raw HTML omitted --&gt;(gdb) l showFunc&lt;!-- raw HTML omitted --&gt;(gdb) l hello.cpp:7&lt;!-- raw HTML omitted --&gt;(gdb) l main.cpp:showFunc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;break&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;设置断点/条件断点&lt;/td&gt;
&lt;td&gt;(gdb) b 9&lt;!-- raw HTML omitted --&gt;(gdb) b showFunc&lt;!-- raw HTML omitted --&gt;(gdb) b main.cpp:13&lt;!-- raw HTML omitted --&gt;(gdb) b main.cpp:showFunc&lt;!-- raw HTML omitted --&gt;(gdb) b showFunc if a==10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delete&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;删除断点&lt;/td&gt;
&lt;td&gt;(gdb) d 1&lt;!-- raw HTML omitted --&gt;(gdb) d 2 3&lt;!-- raw HTML omitted --&gt;(gdb) d 4-7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;breakpoints&lt;/td&gt;
&lt;td&gt;删除所有断点&lt;/td&gt;
&lt;td&gt;(gdb) delete breakpoints&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disable&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;使断点失效&lt;/td&gt;
&lt;td&gt;(gdb) disable 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enable&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;使失效断点重新有效&lt;/td&gt;
&lt;td&gt;(gdb) enable 10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;info&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;break&lt;/td&gt;
&lt;td&gt;显示断点&lt;/td&gt;
&lt;td&gt;(gdb) i b&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;stack&lt;/td&gt;
&lt;td&gt;显示堆栈信息&lt;/td&gt;
&lt;td&gt;(gdb) i s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;frame&lt;/td&gt;
&lt;td&gt;显示当前栈帧详细信息&lt;/td&gt;
&lt;td&gt;(gdb) info frame&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;args&lt;/td&gt;
&lt;td&gt;显示当前栈帧的入参&lt;/td&gt;
&lt;td&gt;(gdb) info args&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;locals&lt;/td&gt;
&lt;td&gt;显示当前栈帧的所有局部变量&lt;/td&gt;
&lt;td&gt;(gdb) info locals&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;start&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;运行程序并在第一条语句处暂停&lt;/td&gt;
&lt;td&gt;(gdb) start&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;run&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;运行程序并在首个断点处暂停&lt;/td&gt;
&lt;td&gt;(gdb) r&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;next&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;下一步（step over）&lt;/td&gt;
&lt;td&gt;(gdb) n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;step&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;下一步（step into）&lt;/td&gt;
&lt;td&gt;(gdb) s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;finish&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;跳出当前堆栈帧（step out）&lt;/td&gt;
&lt;td&gt;(gdb) finish&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;continue&lt;/td&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;继续执行并直至下一个断点处&lt;/td&gt;
&lt;td&gt;(gdb) c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backtrace&lt;/td&gt;
&lt;td&gt;bt&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;显示当前函数调用栈&lt;/td&gt;
&lt;td&gt;(gdb) bt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;print&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;显示变量的值&lt;/td&gt;
&lt;td&gt;(gdb) print v&lt;!-- raw HTML omitted --&gt;(gdb) print &amp;amp;v&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;whatis&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;显示变量/表达式的数据类型&lt;/td&gt;
&lt;td&gt;(gdb) whatis v&lt;!-- raw HTML omitted --&gt;(gdb) whatis &amp;amp;v&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
      
    </item>
    
    <item>
      <title>基于JuiceFS搭建个人网盘</title>
      <link>http://voidint.github.io/post/tool/juicefs/</link>
      <pubDate>Tue, 09 Mar 2021 16:51:43 +0800</pubDate>
      
      <guid>http://voidint.github.io/post/tool/juicefs/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/tool/juicefs.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;什么是juicefs&#34;&gt;什么是JuiceFS&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;JuiceFS 是为云端设计的共享文件系统。
云端：采用云服务中的对象存储作为后端，综合性价比极高。
共享：上千台机器同时挂载，高性能并发读写，共享数据。
易用：POSIX、HDFS、NFS 兼容，无门槛对接现有应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上是&lt;a href=&#34;https://juicefs.com/&#34;&gt;JuiceFS&lt;/a&gt;的官方定义。简单来说，JuiceFS就是一个基于对象存储的分布式文件系统。&lt;/p&gt;
&lt;h1 id=&#34;目标&#34;&gt;目标&lt;/h1&gt;
&lt;p&gt;基于JuiceFS搭建一个存储在阿里云OSS之上的个人网盘。主机A、B上挂载该网盘后，能做到互通有无，即可读可写。&lt;/p&gt;
&lt;h1 id=&#34;前期准备&#34;&gt;前期准备&lt;/h1&gt;
&lt;p&gt;1、申请一个阿里云账号，将AccessKey ID导出到环境变量&lt;code&gt;ACCESS_KEY&lt;/code&gt;，将AccessKey Secret导出到环境变量&lt;code&gt;SECRET_KEY&lt;/code&gt;。
2、购买阿里云OSS服务并创建bucket。bucket的名字暂时定为&lt;code&gt;voidint&lt;/code&gt;。
3、准备两台主机。此次实验我准备了一台公有云上的虚拟机以及一台MacBook Pro。
4、准备一台Redis服务器，且以上的两台主机均可以访问此Redis服务。本次实验中我将Redis服务部署在了公有云虚拟机之上。
5、为Redis设置一个强密码并导出到环境变量&lt;code&gt;REDIS_PASSWORD&lt;/code&gt;。&lt;/p&gt;
&lt;h1 id=&#34;搭建过程&#34;&gt;搭建过程&lt;/h1&gt;
&lt;h2 id=&#34;构建juicefs二进制程序&#34;&gt;构建juicefs二进制程序&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git clone https://github.com/juicedata/juicefs.git
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; juicefs 
$ make
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建议使用源代码构建，千万不要按照&lt;a href=&#34;https://juicefs.com/docs/zh/getting_started.html&#34;&gt;上手指南&lt;/a&gt;中所说通过&lt;code&gt;curl&lt;/code&gt;下载juicefs。也许是文档未及时更新，官方文档上所描述的均为Python所写的juicefs客户端程序，而&lt;strong&gt;本次实验所用到的是go语言所编写的juicefs客户端程序&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;格式化网盘&#34;&gt;格式化网盘&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ juicefs &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; format
NAME:
   juicefs format - format a volume

USAGE:
   juicefs format &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; REDIS-URL NAME

OPTIONS:
   --block-size value       size of block in KiB &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 4096&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --compress value         compression algorithm &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;lz4, zstd, none&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;s2&#34;&gt;&amp;#34;lz4&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --storage value          Object storage &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;e.g. s3, gcs, oss, cos&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;s2&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --bucket value           A bucket URL to store data &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Users/voidint/.juicefs/local&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --access-key value       Access key &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; object storage &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;env ACCESS_KEY&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --secret-key value       Secret key &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; object storage &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;env SECRET_KEY&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --encrypt-rsa-key value  A path to RSA private key &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;PEM&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --force                  overwrite existing format &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;格式化的命令及选项如上所示，需要关注的选项分别为&lt;code&gt;--storage&lt;/code&gt;和&lt;code&gt;--bucket&lt;/code&gt;。由于本次实验使用的是阿里云OSS，因此将storage选项设置为&lt;code&gt;oss&lt;/code&gt;。按照&lt;a href=&#34;https://github.com/juicedata/juicefs/blob/main/docs/en/how_to_setup_object_storage.md#alibaba-cloud-object-storage-service&#34;&gt;文档&lt;/a&gt;所述，将bucket选项值设置为&lt;code&gt;https://voidint&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;另外，由于阿里云的操作凭证信息已经导出到了&lt;code&gt;ACCESS_KEY&lt;/code&gt;和&lt;code&gt;SECRET_KEY&lt;/code&gt;这两个环境变量，因此无需再重复设置format子命令中相关的选项值。&lt;/p&gt;
&lt;p&gt;由于网盘中的文件元数据会被存储到Redis，还需要指定一个Redis的URL（&lt;a href=&#34;https://pkg.go.dev/github.com/go-redis/redis#ParseURL&#34;&gt;格式&lt;/a&gt;），这里指定公有云上主机的IP地址，如&lt;code&gt;113.31.11.123&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;还需要给网盘取一个显式的名字，如&lt;code&gt;alicloud&lt;/code&gt;（此处暂不支持中文字符）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 两台主机上分别执行以下命令：&lt;/span&gt;
$ ./juicefs format --storage oss --bucket http://voidint 113.31.11.123 alicloud
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;挂载网盘&#34;&gt;挂载网盘&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ juicefs &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; mount
NAME:
   juicefs mount - mount a volume

USAGE:
   juicefs mount &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; REDIS-URL MOUNTPOINT

OPTIONS:
   --metrics value           address to &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; metrics &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;s2&#34;&gt;&amp;#34;:9567&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --no-usage-report         &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt; not send usage report &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   -d, --background          run in background &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --no-syslog               disable syslog &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   -o value                  other FUSE options
   --attr-cache value        attributes cache timeout in seconds &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --entry-cache value       file entry cache timeout in seconds &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --dir-entry-cache value   dir entry cache timeout in seconds &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --enable-xattr            &lt;span class=&#34;nb&#34;&gt;enable&lt;/span&gt; extended attributes &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;xattr&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --get-timeout value       the max number of seconds to download an object &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 60&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --put-timeout value       the max number of seconds to upload an object &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 60&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --io-retries value        number of retries after network failure &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 30&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --max-uploads value       number of connections to upload &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 20&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --buffer-size value       total read/write buffering in MB &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 300&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --prefetch value          prefetch N blocks in parallel &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 3&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --writeback               upload objects in background &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --cache-dir value         directory paths of &lt;span class=&#34;nb&#34;&gt;local&lt;/span&gt; cache, use colon to separate multiple paths &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Users/voidint/.juicefs/cache&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --cache-size value        size of cached objects in MiB &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 1024&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --free-space-ratio value  min free space &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ratio&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: 0.1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
   --cache-partial-only      cache only random/small &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;挂载命令需要设置的选项和参数很少，&lt;code&gt;-d&lt;/code&gt;可以使其以守护进程方式运行，&lt;code&gt;REDIS-URL&lt;/code&gt;参数用于指定Redis服务地址，&lt;code&gt;MOUNTPOINT&lt;/code&gt;用于指定目录挂载点。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 两台主机上分别执行以下命令：&lt;/span&gt;
$ ./juicefs mount -d 113.31.11.123 ~/jfs

&lt;span class=&#34;c1&#34;&gt;# 查看下文件系统挂载是否成功&lt;/span&gt;
$ mount
......
JuiceFS:alicloud on /Users/voidint/jfs &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;macfuse, nodev, nosuid, synchronous, mounted by voidint&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;测试网盘读写&#34;&gt;测试网盘读写&lt;/h2&gt;
&lt;p&gt;在等待挂载完毕后，便可以开始对网盘进行读写测试。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 两台主机上分别执行以下命令：&lt;/span&gt;
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;hostname&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt; &amp;gt;&amp;gt; ~/jfs/hostname.txt
$ cat ~/jfs/hostname.txt
voidint
113-31-11-123
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从输出可知，两台主机已经挂载了同一块网盘。&lt;/p&gt;
&lt;h2 id=&#34;卸载网盘&#34;&gt;卸载网盘&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ juicefs &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; umount
NAME:
   juicefs umount - unmount a volume

USAGE:
   juicefs umount &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;command&lt;/span&gt; options&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; MOUNTPOINT

OPTIONS:
   --force, -f  unmount a busy mount point by force &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;卸载网盘的方式也极为简单，只需要指定挂载目录即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 两台主机上分别执行以下命令：&lt;/span&gt;
$ j umount ~/jfs
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;再次挂载网盘&#34;&gt;再次挂载网盘&lt;/h2&gt;
&lt;p&gt;为了验证卸载后重新挂载依然能够读写之前的文件，下面重新挂载该网盘。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 两台主机上分别执行以下命令：&lt;/span&gt;
$ ./juicefs mount -d 113.31.11.123 ~/jfs
$ ls -lh ~/jfs
-rw-r--r--  &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; voidint  staff    21B  &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;9&lt;/span&gt; 18:47 hostname.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到hostname.txt文件依然还存在。大功告成！&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://juicefs.com/docs/zh/intro.html&#34;&gt;JuiceFS文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/juicedata/juicefs&#34;&gt;JuiceFS GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>goproxy.io内部私有化部署</title>
      <link>http://voidint.github.io/post/golang/goproxy-privatization-deployment/</link>
      <pubDate>Sat, 14 Mar 2020 17:58:28 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/golang/goproxy-privatization-deployment/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/golang/goproxyio.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;最近在公司内部搭建了一个&lt;a href=&#34;https://goproxy.io/zh/&#34;&gt;goproxy.io&lt;/a&gt;的服务，总结并记录一下备忘。&lt;/p&gt;
&lt;p&gt;goproxy.io本身已经比较成熟，对部署也非常友好，按照官方的文档一步一步搭建应该都会比较顺利。当然我也不是对官方文档的无意义复制粘贴，我将从以下三个方面进行阐述：&lt;/p&gt;
&lt;h1 id=&#34;goproxyio服务的搭建&#34;&gt;goproxy.io服务的搭建&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;安装go环境(要求1.13及以上版本)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ yum install golang -y
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装git&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ yum install git -y
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;安装goproxy&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mkdir -p /opt/goproxy &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /opt/goproxy
$ git clone https://github.com/goproxyio/goproxy.git
$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; goproxy
$ make
$ mv ./bin/goproxy /usr/local/bin/goproxy
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;启动goproxy服务（监听8080端口）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mkdir -p /opt/goproxy/go_cache
$ goproxy -cacheDir /opt/goproxy/go_cache -exclude example.io -proxy https://goproxy.io -listen 0.0.0.0:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;解决go-get方式拉取私有库问题&#34;&gt;解决go get方式拉取私有库问题&lt;/h1&gt;
&lt;p&gt;明确下目标。所谓的go get方式拉取私有库，指的是能通过&lt;code&gt;go get -u -v -insecure example.io/xxx/yyy&lt;/code&gt;方式拉取到内部私有仓库中的go代码。example.io指的是内部的私有域名。&lt;/p&gt;
&lt;p&gt;假设已经按照以上步骤在10.0.1.2安装了goproxy.io服务。&lt;/p&gt;
&lt;p&gt;安装govanityurls服务（监听80端口）
tonybai在其&lt;a href=&#34;https://tonybai.com/2017/06/28/set-custom-go-get-import-path-for-go-package/&#34;&gt;博文&lt;/a&gt;中说的很清楚了，我也就不重复了。贴一张他博文中的配图，一图胜千言。&lt;/p&gt;
&lt;p&gt;将内部私有域名example.io解析到安装了以上服务的10.0.1.2。&lt;/p&gt;
&lt;h1 id=&#34;开发人员本地环境配置&#34;&gt;开发人员本地环境配置&lt;/h1&gt;
&lt;p&gt;临时开启Go Module&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;永久开启Go Module&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go env -w &lt;span class=&#34;nv&#34;&gt;GO111MODULE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;on
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;设置go源代码库拉取的代理地址（http://10.0.1.2:8080）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go env -w &lt;span class=&#34;nv&#34;&gt;GOPROXY&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;http://10.0.1.2:8080,https://goproxy.cn,direct&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可选：设置私有库（10.0.1.2上的goproxy服务本身也会将私有库重定向至gitlab.example.com）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go env -w &lt;span class=&#34;nv&#34;&gt;GOPRIVATE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;example.io&amp;#34;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;追加~/.gitconfig配置（修改为通过git下载源代码）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git config --global url.&lt;span class=&#34;s2&#34;&gt;&amp;#34;ssh://git@gitlab.example.com&amp;#34;&lt;/span&gt;.insteadOf &lt;span class=&#34;s2&#34;&gt;&amp;#34;http://gitlab.example.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试拉取外网的公开库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go get -u -v github.com/go-xorm/xorm 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试拉取内网的私有库（默认拉取master分支的最近一次提交）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go get -u -v -insecure example.io/voidint/tsdump
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;测试拉取内网的私有库的指定版本（强烈建议为每个版本打上tag）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ go get -u -v -insecure example.io/voidint/tsdump@v1.0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://goproxy.io/zh/docs/enterprise.html&#34;&gt;部署公司内部自己的 goproxy.io 服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tonybai.com/2017/06/28/set-custom-go-get-import-path-for-go-package/&#34;&gt;定制Go Package的Go Get导入路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tonybai.com/2017/06/30/go-get-go-packages-in-private-code-repo-by-govanityurls/&#34;&gt;使用govanityurls让私有代码仓库中的go包支持go get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://holys.im/2016/09/20/go-get-in-gitlab/&#34;&gt;如何使用 go get 下载 gitlab 私有项目&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Linux Namespaces初体验</title>
      <link>http://voidint.github.io/post/container/linux-namespaces-first-experience/</link>
      <pubDate>Tue, 25 Feb 2020 17:45:51 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/container/linux-namespaces-first-experience/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/cloudnative/linux-namespaces-first-experience.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;下面是&lt;a href=&#34;https://coolshell.cn/articles/17010.html&#34;&gt;酷壳&lt;/a&gt;给出的关于Linux Namespaces的介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux Namespace是Linux提供的一种内核级别环境隔离的方法。不知道你是否还记得很早以前的Unix有一个叫chroot的系统调用（通过修改根目录把用户jail到一个特定目录下），chroot提供了一种简单的隔离模式：chroot内部的文件系统无法访问外部的内容。Linux Namespace在此基础上，提供了对UTS、IPC、mount、PID、network、User等的隔离机制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当前Linux一共实现了6种不同类型的Namespace&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Namespace类型&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;系统调用参数&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;内核版本&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;隔离内容&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mount Namespace&lt;/td&gt;
&lt;td&gt;CLONE_NEWNS&lt;/td&gt;
&lt;td&gt;2.4.19&lt;/td&gt;
&lt;td&gt;挂载点（文件系统）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;UTS Namespace&lt;/td&gt;
&lt;td&gt;CLONE_NEWUTS&lt;/td&gt;
&lt;td&gt;2.6.19&lt;/td&gt;
&lt;td&gt;主机名与域名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IPC Namespacce&lt;/td&gt;
&lt;td&gt;CLONE_NEWIPC&lt;/td&gt;
&lt;td&gt;2.6.19&lt;/td&gt;
&lt;td&gt;信号量、消息队列和共享内存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PID Namespace&lt;/td&gt;
&lt;td&gt;CLONE_NEWPID&lt;/td&gt;
&lt;td&gt;2.6.24&lt;/td&gt;
&lt;td&gt;进程编号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Network Namespace&lt;/td&gt;
&lt;td&gt;CLONE_NEWNET&lt;/td&gt;
&lt;td&gt;2.6.29&lt;/td&gt;
&lt;td&gt;网络设备、网络栈、端口等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User Namespace&lt;/td&gt;
&lt;td&gt;CLONE_NEWUSER&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;用户和用户组&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Namespace的API主要使用如下3个系统调用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clone(): 创建新进程。&lt;/li&gt;
&lt;li&gt;unshare(): 将进程移出某个Namespace。&lt;/li&gt;
&lt;li&gt;setns(): 将进程加入到Namespace中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;体验&#34;&gt;体验&lt;/h1&gt;
&lt;h2 id=&#34;uts-namespace&#34;&gt;UTS Namespace&lt;/h2&gt;
&lt;p&gt;UTS Namespace用于隔离nodename和domainname两个系统标识，即在不同的Namespace中允许拥有各自的hostname。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 在GOPATH下新建一个名为mydocker的目录，并在该目录下新建文件main.go。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os/exec&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;syscall&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;Cloneflags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWUTS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`PS1=\[\e[32;1m\][\u@\h \W]$&amp;gt;\[\e[0m\]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;以上代码通过exec.Command(&amp;ldquo;bash&amp;rdquo;)方式fork了一个bash子进程，并且使用了CLONE_NEWUTS标识符去创建了一个Namespace。下面验证下bash子进程与mydocker父进程是否处于不同的的UTS Namespace中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;// 查看最初的系统hostname
$ hostname
ubuntu14.04

// 以root身份运行mydocker程序
$ sudo ./mydocker

// 在隔离的UTS Namespace下修改hostname为hello
root@ubuntu14:/home/voidint# hostname -b hello
root@ubuntu14:/home/voidint# hostname
hello

// 退出bash子进程并查看hostname是否发生变化
root@ubuntu14:/home/voidint# &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt;

// 可以看到hostname并未发生变化
$ hostname
ubuntu14.04
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;pid-namespace&#34;&gt;PID Namespace&lt;/h2&gt;
&lt;p&gt;PID Namespace用于隔离进程ID，同一个进程在不同的PID Namespace中可以拥有不同的PID。以docker容器为例，每个容器对于宿主机而言都是一个进程，若在容器内部查看到该进程的PID为1，但在宿主机上查看到的PID并非为1，这就是由于容器内拥有独立的PID Namespace的缘故。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os/exec&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;syscall&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;Cloneflags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWUTS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWIPC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWPID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`PS1=\[\e[32;1m\][\u@\h \W]$&amp;gt;\[\e[0m\]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编译并运行以上程序，查看当前Namespace的PID，PID为1。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$$&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在宿主机上新开一个shell，并通过pstree -pl查看mydocker的PID为2692。注意，这里不能使用ps命令去查看，因为ps、top之类的命令会读取/proc目录下内容，由于此处并未进行Mount Namespace的隔离，查看到的/proc目录下内容并不真实和准确。&lt;/p&gt;
&lt;h2 id=&#34;mount-namespace&#34;&gt;Mount Namespace&lt;/h2&gt;
&lt;p&gt;Mount Namespace用来隔离各个进程看到的挂载点视图。在Mount Namespace中调用mount()或者umount()都仅仅只是影响当前Namespace内的文件系统，对于全局的文件系统并没有影响。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;os/exec&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;syscall&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;bash&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;SysProcAttr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;Cloneflags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWUTS&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
			&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWIPC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
			&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWPID&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
			&lt;span class=&#34;nx&#34;&gt;syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;CLONE_NEWNS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdin&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stdout&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`PS1=\[\e[32;1m\][\u@\h \W]$&amp;gt;\[\e[0m\]`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;cmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Fprintln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Stderr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;nx&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;运行以上程序，在启动的bash子进程中执行ps -ef，依然可以看到宿主机上的所有进程，这是由于proc文件系统是继承自宿主机。下面重新挂载proc文件系统，并再次查看ps -ef的输出。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mount -t proc proc /proc

$ ps -ef
UID        PID  PPID  C STIME TTY          TIME CMD
root         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 18:11 pts/1    00:00:00 bash
root        &lt;span class=&#34;m&#34;&gt;14&lt;/span&gt;     &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; 18:16 pts/1    00:00:00 ps -ef
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到，重新挂载proc文件系统后，ps命令仅能看到容器内的进程了，符合预期。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.cn/dp/B072ZDHK9S/ref=sr_1_1?ie=UTF8&amp;amp;qid=1535615095&amp;amp;sr=8-1&amp;amp;keywords=%E8%87%AA%E5%B7%B1%E5%8A%A8%E6%89%8B%E5%86%99docker&#34;&gt;《自己动手写Docker》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man7/namespaces.7.html&#34;&gt;Namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coolshell.cn/articles/17010.html&#34;&gt;DOCKER基础技术：LINUX NAMESPACE（上）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coolshell.cn/articles/17029.html&#34;&gt;DOCKER基础技术：LINUX NAMESPACE（下）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.infoq.com/cn/articles/docker-kernel-knowledge-namespace-resource-isolation&#34;&gt;Docker背后的内核知识——Namespace资源隔离&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Linux用户登录密码的生成</title>
      <link>http://voidint.github.io/post/posix/linux-password/</link>
      <pubDate>Tue, 25 Feb 2020 17:24:33 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/posix/linux-password/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/posix/linux-password.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;从自动化需求说起&#34;&gt;从自动化需求说起&lt;/h1&gt;
&lt;p&gt;如何生成一个Linux用户登录密码？可能有人会说用passwd生成。的确，passwd命令能够帮助我们重置用户登录密码，但是这并没有解答如何生成一个Linux用户登录密码的疑问。&lt;/p&gt;
&lt;p&gt;对于这个问题，秉承着实用主义的精神，我原本也不会去深究。毕竟，安装的时候会设置密码，安装完毕后能通过passwd命令重置密码，学会这两点后已满足一般的需求已经绰绰有余了。&lt;/p&gt;
&lt;p&gt;但是，对于自动化而言，知道以上的两点是不够的。Linux的自动化安装过程中，设置用户登录密码这事，肯定不能有人为干预，否则谈什么自动化。操作系统安装完毕后，也有可能会有重置用户密码的自动化需求，此时使用passwd命令来重置用户密码，也不见得是最佳的选择。&lt;/p&gt;
&lt;p&gt;如果明白了密码的生成机制，那么这个自动化需求的难题也就迎刃而解了。&lt;/p&gt;
&lt;h1 id=&#34;密码生成理论&#34;&gt;密码生成理论&lt;/h1&gt;
&lt;p&gt;有Linux基础的人一定知道，Linux的用户登录密码信息是存放在/etc/shadow文件当中的，并且该文件只有root用户能够访问。以下会以voidint这个用户为例，看一下这个用户的密码信息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sudo cat /etc/shadow &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep voidint
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;sudo&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; password &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; voidint:
voidint:&lt;span class=&#34;nv&#34;&gt;$6$3&lt;/span&gt;kheX/Vg&lt;span class=&#34;nv&#34;&gt;$TGum9JEjfmGsj8Mfk3SUY&lt;/span&gt;/d/bWkJgnRimCxoaDTX7wcgrraYvU.fiziEUdpDglWc58uPZqWJhKNjiXayP9Q6b0:16892::::::
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;很明显，这个字符串被&lt;code&gt;:&lt;/code&gt;符号分隔成了9段。我们这里只关注前两段，至于每一段具体的含义，可以戳这里自行阅读。第一段，是用户名称。第二段，即为用户密码。其实密码这种称呼并不准确。相对准确的说法是，用户密码明文经过某种哈希算法计算所获得的密文。但是，鉴于这个相对准确的说法实在太长太拗口，不便于表达。因此，以下提到的密码在无特别说明情况下，一律指的是密码明文的密文。&lt;/p&gt;
&lt;p&gt;言归正传，看到这里相信好多人会和我有一样的思考: 是不是只要知道了密码生成的算法，并按照此算法生成一个满足Linux要求的密码，再把密码覆盖这个第二段的内容，那么用户密码就被重置了吗？&lt;/p&gt;
&lt;p&gt;仔细看这段密码，会发现它是由&lt;code&gt;$xxx$xxx$xxx&lt;/code&gt;的格式构成，即由&lt;code&gt;$&lt;/code&gt;符号分隔的3端字符串构成。查阅资料后得知，这个格式可以进一步概括为&lt;code&gt;$id$salt$encrypted&lt;/code&gt;。简要说明下&lt;code&gt;$id$salt$encrypted&lt;/code&gt;中各个部分的含义:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id: 加密(确切说是哈希)所用算法的代号。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;ID&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;MD5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2a&lt;/td&gt;
&lt;td&gt;Blowfish (not in mainline glibc; added in some Linux distributions)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;SHA-256 (since glibc 2.7)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;SHA-512 (since glibc 2.7)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;salt: 由程序随机生成的字符串，即盐。&lt;/li&gt;
&lt;li&gt;encrypted: 用户密码明文字符串加盐后使用哈希算法所得的哈希值，即哈希(明文+盐)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;特别说明&#34;&gt;特别说明&lt;/h2&gt;
&lt;p&gt;资料中还提到了另外一种形式的密码——&lt;code&gt;$id$rounds=yyy$salt$encrypted&lt;/code&gt;。其中，盐的部分换成了rounds=yyy。yyy是一个由用户(调用方)提供的[1000, 999999999]之间的整数。&lt;/p&gt;
&lt;h1 id=&#34;密码生成实践&#34;&gt;密码生成实践&lt;/h1&gt;
&lt;p&gt;知道了上面这部分基础知识，那么接下来就是理论指导实践的环节了。具体可以借助什么工具来生成密码呢？这里使用的grub-crypt工具。你可以在某个Linux发行版中安装这个工具，也可以使用我提供的这个&lt;a href=&#34;https://github.com/voidint/dockerfile/tree/master/grub-crypt&#34;&gt;dockerfile&lt;/a&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用sha512算法生成密码&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ grub-crypt --sha-512
Password:
Retype password:
&lt;span class=&#34;nv&#34;&gt;$6$r1jcut3Crl8bSIMo$XfKnrl4Ykzk2KPQ59MCXcUef9OjZWoZrIp7aeWwnCzIVQY1p&lt;/span&gt;/G1EiJQE4DYFej783NlvR5KtKYXs4P/hQaVst.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;将生成的密码写入/etc/shadow文件&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sudo cat /etc/shadow &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep voidint
voidint:&lt;span class=&#34;nv&#34;&gt;$6$r1jcut3Crl8bSIMo$XfKnrl4Ykzk2KPQ59MCXcUef9OjZWoZrIp7aeWwnCzIVQY1p&lt;/span&gt;/G1EiJQE4DYFej783NlvR5KtKYXs4P/hQaVst.:16892:::::: 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;退出当前用户并使用新修改的密码登录&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://man7.org/linux/man-pages/man3/crypt.3.html&#34;&gt;CRYPT(3)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.thegeekdiary.com/centos-rhel-6-how-to-password-protect-grub-password-protected-booting/&#34;&gt;CentOS / RHEL 6 : How to password protect grub (Password-Protected Booting)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://clavinli.github.io/2014/11/14/linux-command-hash-root-password-in-kickstart/&#34;&gt;Command | kickstart之中rootpw密码生成方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cn.linux.vbird.org/linux_basic/0410accountmanager.php#shadow_file&#34;&gt;鸟哥的Linux私房菜——/etc/shadow文件结构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Linux下hpssacli配置 HP Smart Array</title>
      <link>http://voidint.github.io/post/tool/hp-ssa-cli/</link>
      <pubDate>Tue, 25 Feb 2020 17:05:06 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/tool/hp-ssa-cli/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/tool/hp-ssa-cli.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;什么是hp-ssa-cli&#34;&gt;什么是HP SSA CLI&lt;/h1&gt;
&lt;p&gt;HP Smart Storage Administrator Command Line&lt;/p&gt;
&lt;h1 id=&#34;适用范围&#34;&gt;适用范围&lt;/h1&gt;
&lt;p&gt;HP Smart Array G6、G7、G8、G9&lt;/p&gt;
&lt;h1 id=&#34;创建raid的指导方针&#34;&gt;创建RAID的指导方针&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;组成逻辑磁盘(RAID阵列)的物理驱动器应该是一致的。&lt;/li&gt;
&lt;li&gt;为了更好地利用物理驱动器的空间容量，组成RAID阵列的每一块物理驱动器的容量应该趋于一致的。如果物理驱动器在容量上有差异，以容量最小的为准。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;hpssacli操作模式&#34;&gt;HPSSACLI操作模式&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Console mode: 交互式的带上下文的命令行模式。&lt;/li&gt;
&lt;li&gt;Command mode:&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;语法&#34;&gt;语法&lt;/h1&gt;
&lt;p&gt;不管是console mode还是command mode，典型的HP SSA CLI由这几部分组成: target、command、parameter（如果需要的话）。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt; [parameter=value]&lt;/p&gt;
&lt;h2 id=&#34;target&#34;&gt;target&lt;/h2&gt;
&lt;p&gt;target是你所要配置的device的一种表示方法。device可以是controller、array、logical drive、physical drive。&lt;/p&gt;
&lt;h3 id=&#34;例子&#34;&gt;例子&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;controller slot=3&lt;/li&gt;
&lt;li&gt;controller wwn=500805F3000BAC11&lt;/li&gt;
&lt;li&gt;controller slot=2 array A&lt;/li&gt;
&lt;li&gt;controller chassisname=&amp;ldquo;A&amp;rdquo; array B logicaldrive 2&lt;/li&gt;
&lt;li&gt;controller chassisname=&amp;ldquo;A&amp;rdquo; physicaldrive 1:0&lt;/li&gt;
&lt;li&gt;controller all&lt;/li&gt;
&lt;li&gt;controller slot=2 array all&lt;/li&gt;
&lt;li&gt;controller slot=3 physicaldrive 1:2-1:5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;command&#34;&gt;command&lt;/h2&gt;
&lt;h3 id=&#34;配置类&#34;&gt;配置类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add&lt;/li&gt;
&lt;li&gt;create&lt;/li&gt;
&lt;li&gt;delete&lt;/li&gt;
&lt;li&gt;modify&lt;/li&gt;
&lt;li&gt;remove&lt;/li&gt;
&lt;li&gt;set target&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;非配置类&#34;&gt;非配置类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;diag&lt;/li&gt;
&lt;li&gt;help&lt;/li&gt;
&lt;li&gt;rescan&lt;/li&gt;
&lt;li&gt;shorthand&lt;/li&gt;
&lt;li&gt;show&lt;/li&gt;
&lt;li&gt;version&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;去除警告性提示&#34;&gt;去除警告性提示&lt;/h2&gt;
&lt;p&gt;对于一些可能对数据安全产生危险的操作，程序会要求输入y/n后才会实际执行。如果你并不希望如此，可以增加一个force的参数来实现这样的目的。&lt;/p&gt;
&lt;p&gt;比如，ctrl ch=&amp;ldquo;Lab4&amp;rdquo; ld 1 delete forced&lt;/p&gt;
&lt;h2 id=&#34;show命令&#34;&gt;show命令&lt;/h2&gt;
&lt;p&gt;通过此命令可以获取关于目标设备的一些信息。&lt;/p&gt;
&lt;p&gt;基本的语法: &lt;!-- raw HTML omitted --&gt; show [detail]|[status]&lt;/p&gt;
&lt;h1 id=&#34;典型用法&#34;&gt;典型用法&lt;/h1&gt;
&lt;h2 id=&#34;删除目标设备&#34;&gt;删除目标设备&lt;/h2&gt;
&lt;h3 id=&#34;语法-1&#34;&gt;语法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;lt;target&amp;gt; delete [forced]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于删除设备会导致数据丢失，属于危险操作。默认情况下，程序会显示警告性的提示信息并要求输入y/n。如果要规避这种情况，可以加上force参数。&lt;/p&gt;
&lt;h3 id=&#34;例子-1&#34;&gt;例子&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ctrl ch=&amp;ldquo;Lab 4&amp;rdquo; delete forced&lt;/li&gt;
&lt;li&gt;ctrl slot=3 ld all delete&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建逻辑驱动器&#34;&gt;创建逻辑驱动器&lt;/h2&gt;
&lt;h3 id=&#34;语法-2&#34;&gt;语法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&amp;lt;target&amp;gt; create type=ld [parameter=value]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一般而言&lt;!-- raw HTML omitted --&gt;指的是controller，但如果是要在一个已经存在的阵列(array)基础上创建一个逻辑驱动器，那么&lt;!-- raw HTML omitted --&gt;也可以是array。&lt;/p&gt;
&lt;p&gt;如果你想要在一组物理驱动器(physical drive)之上创建一个逻辑驱动器(logical drive)，那么不需要先去创建一个阵列(array)。CLI有别于GUI，阵列是在创建逻辑驱动器时自动创建的。&lt;/p&gt;
&lt;h3 id=&#34;例子-2&#34;&gt;例子&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ctrl slot=5 create type=ld drives=1:0,1:1,1:3 raid=adg&lt;/li&gt;
&lt;li&gt;ctrl slot=5 create type=ld drives=1:1-1:3 raid=adg&lt;/li&gt;
&lt;li&gt;ctrl slot=5 create type=ld drives=1:7,1:10-2:5,2:8-2:12 raid=adg&lt;/li&gt;
&lt;li&gt;ctrl slot=5 array A create type=ld size=330 raid=adg&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://community.hpe.com/hpeb/attachments/hpeb/itrc-264/148204/3/HP%20Smart%20Storage%20Administrator%20User%20Guide.pdf&#34;&gt;HP Smart Storage Administrator User Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>SAS3IRCU配置LSI SAS3系列RAID卡</title>
      <link>http://voidint.github.io/post/tool/sas3ircu/</link>
      <pubDate>Tue, 25 Feb 2020 16:43:06 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/tool/sas3ircu/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/tool/sas3ircu.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;适用的controller&#34;&gt;适用的controller&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;LSISAS3008&lt;/li&gt;
&lt;li&gt;LSISAS3004&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;名词解释&#34;&gt;名词解释&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Controller:&lt;/li&gt;
&lt;li&gt;IR:&lt;/li&gt;
&lt;li&gt;Volume: 卷，基于物理驱动器通过创建冗余磁盘阵列所生成的虚拟磁盘。概念上等同于RAID冗余磁盘阵列。&lt;/li&gt;
&lt;li&gt;Enclosure: 硬盘盒编号。&lt;/li&gt;
&lt;li&gt;Bay: 即slot，指代硬盘盒的某个插槽。&lt;/li&gt;
&lt;li&gt;HDD: Hard Disk Drive的缩写，即普通机械硬盘。&lt;/li&gt;
&lt;li&gt;SSD: Solid State Drive的缩写，即固态硬盘。&lt;/li&gt;
&lt;li&gt;SAS: 序列式SCSI（SAS：Serial Attached SCSI）是一种电脑集线的技术，其功能主要是作为周边零件的数据传输，例如：硬盘、CD-ROM等设备而设计的界面。&lt;/li&gt;
&lt;li&gt;SATA: 串行ATA（Serial ATA: Serial Advanced Technology Attachment）是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;语法&#34;&gt;语法&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; &amp;lt;command&amp;gt; &amp;lt;parameters&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;通用参数&#34;&gt;通用参数&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;controller_#&amp;gt;
controller编号是程序分配给PCI插槽上的RAID硬件的唯一编号。比如，某个设备上包含2块LSI SAS3008的RAID卡，那么编号0就代表这第一块RAID卡，而编号1就指代另一块。这个编号的取值范围是0~255之间的整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;Enclosure:Bay&#34;&gt;Enclosure:Bay&lt;/a&gt;
由硬盘盒编号(Enclosure)和插槽编号(Bay/Slot)组成的物理驱动器唯一标识。通过DISPLAY命令可以查看到此信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;退出码&#34;&gt;退出码&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;0: 命令执行成功。&lt;/li&gt;
&lt;li&gt;1: 错误的命令行参数或者操作失败。&lt;/li&gt;
&lt;li&gt;2: 未发现指定的adapter。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;create命令&#34;&gt;CREATE命令&lt;/h1&gt;
&lt;p&gt;创建volume须准守以下规则:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;组成一个volume的多块磁盘，包括卷的热备盘在内，都必须是在同一个controller上。&lt;/li&gt;
&lt;li&gt;支持的RAID级别包括: RAID0、RAID1、RAID1E、RAID10。&lt;/li&gt;
&lt;li&gt;同一个controller上至多创建2个volume。&lt;/li&gt;
&lt;li&gt;RAID级别与物理驱动器数量限制
&lt;ul&gt;
&lt;li&gt;RAID0: Max=10; Min=2&lt;/li&gt;
&lt;li&gt;RAID1: Max=2; Min=2&lt;/li&gt;
&lt;li&gt;RAID1E: Max=10; Min=3&lt;/li&gt;
&lt;li&gt;RAID10: Max=10; Min=3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;每个controller上能创建1个或者2个hot spare disk。&lt;/li&gt;
&lt;li&gt;不允许跨SAS、SATA物理驱动器创建volume。&lt;/li&gt;
&lt;li&gt;不允许跨普通硬盘和固态硬盘创建volume。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语法-1&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; create &amp;lt;volume_type&amp;gt; &amp;lt;size&amp;gt; {&amp;lt;Enclosure:Bay&amp;gt;} [VolumeName] [noprompt]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;li&gt;&amp;lt;volume_type&amp;gt;: volume类型。等价于RAID级别。可选值包括RAID0、RAID1、RAID1E、RAID10。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;: volume的容量大小，单位MB。MAX代表可用的最大容量值。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Enclosure:Bay&#34;&gt;Enclosure:Bay&lt;/a&gt;:&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;delete命令&#34;&gt;DELETE命令&lt;/h1&gt;
&lt;p&gt;该命令用于删除指定controller下的所有的volume及其hot spare drives，但并不会对其它controller的配置参数产生任何影响。&lt;/p&gt;
&lt;h2 id=&#34;语法-2&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; delete [noprompt]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数-1&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;deletevolume命令&#34;&gt;DELETEVOLUME命令&lt;/h1&gt;
&lt;p&gt;该命令用于删除指定controller下的指定volume及其hot spare drives，但并不会对其它controller的配置参数产生任何影响。如果某个hot spare对于剩余还未被删除的volume而言是不合适的，那么这个hot spare也会被删除。&lt;/p&gt;
&lt;h2 id=&#34;语法-3&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; deletevolume &amp;lt;volumeID&amp;gt; [noprompt]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数-2&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;: 待删除的volume ID。通过STATUS或者DISPLAY命令可以查看到volume ID相关的信息。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;display命令&#34;&gt;DISPLAY命令&lt;/h1&gt;
&lt;p&gt;该命令用于显示LSI SAS3 controller相关的配置信息，包括controller类型、固件版本、BIOS版本、volume信息、物理驱动器信息，以及enclosure。&lt;/p&gt;
&lt;h2 id=&#34;语法-4&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; display [filename]
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数-3&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;命令输出样例&#34;&gt;命令输出样例&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;55
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;56
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;57
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;58
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;59
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;60
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;61
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;62
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;63
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;64
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;65
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;66
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;67
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;68
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;69
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;70
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;71
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;72
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;73
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;74
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;75
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;76
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;77
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;78
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;79
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;80
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;81
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;82
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;83
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;84
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;85
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;86
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;87
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;88
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;89
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;90
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;91
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;92
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;93
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;94
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;95
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;96
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Avago Technologies SAS3 IR Configuration Utility.
Version 15.00.00.00 (2016.11.21) 
Copyright (c) 2009-2016 Avago Technologies. All rights reserved. 

Read configuration has been initiated for controller 0
------------------------------------------------------------------------
Controller information
------------------------------------------------------------------------
  Controller type                         : SAS3008
  BIOS version                            : 8.29.02.00
  Firmware version                        : 12.00.02.00
  Channel description                     : 1 Serial Attached SCSI
  Initiator ID                            : 0
  Maximum physical devices                : 255
  Concurrent commands supported           : 4096
  Slot                                    : 0
  Segment                                 : 0
  Bus                                     : 1
  Device                                  : 0
  Function                                : 0
  RAID Support                            : Yes
------------------------------------------------------------------------
IR Volume information
------------------------------------------------------------------------
IR volume 1
  Volume ID                               : 323
  Status of volume                        : Okay (OKY)
  Volume wwid                             : 04b796b93430a2a7
  RAID level                              : RAID1
  Size (in MB)                            : 857353
  Boot                                    : Primary
  Physical hard disks                     :
  PHY[0] Enclosure#/Slot#                 : 2:0
  PHY[1] Enclosure#/Slot#                 : 2:1
------------------------------------------------------------------------
Physical device information
------------------------------------------------------------------------
Initiator at ID #0

Device is a Hard disk
  Enclosure #                             : 2
  Slot #                                  : 0
  SAS Address                             : 5000c50-0-9f3e-0741
  State                                   : Optimal (OPT)
  Size (in MB)/(in sectors)               : 858483/1758174767
  Manufacturer                            : SEAGATE 
  Model Number                            : ST900MM0168     
  Firmware Revision                       : N003
  Serial No                               : W4009ZLH0000E739G08J
  Unit Serial No(VPD)                     : W4009ZLH0000E739G08J
  GUID                                    : 5000c5009f3e0743
  Protocol                                : SAS
  Drive Type                              : SAS_HDD

Device is a Hard disk
  Enclosure #                             : 2
  Slot #                                  : 1
  SAS Address                             : 5000c50-0-9f40-be21
  State                                   : Optimal (OPT)
  Size (in MB)/(in sectors)               : 123/1758174767
  Manufacturer                            : SEAGATE 
  Model Number                            : ST900MM0168     
  Firmware Revision                       : N003
  Serial No                               : S403EKZH0000E7400Z53
  Unit Serial No(VPD)                     : S403EKZH0000E7400Z53
  GUID                                    : 5000c5009f40be23
  Protocol                                : SAS
  Drive Type                              : SAS_SSD

Device is a Enclosure services device
  Enclosure #                             : 2
  Slot #                                  : 36
  SAS Address                             : 500e004-a-aaaa-aa3e
  State                                   : Standby (SBY)
  Manufacturer                            : 12G SAS
  Model Number                            : Expander        
  Firmware Revision                       : RevB
  Serial No                               : 
  Unit Serial No(VPD)                     : 500e004aaaaaaa3e
  GUID                                    : N/A
  Protocol                                : SAS
  Device Type                             : Enclosure services device
------------------------------------------------------------------------
Enclosure information
------------------------------------------------------------------------
  Enclosure#                              : 1
  Logical ID                              : 5a0086f5:dc780000
  Numslots                                : 8
  StartSlot                               : 0
  Enclosure#                              : 2
  Logical ID                              : 500e004a:aaaaaa3e
  Numslots                                : 29
  StartSlot                               : 0
------------------------------------------------------------------------
SAS3IRCU: Command DISPLAY Completed Successfully.
SAS3IRCU: Utility Completed Successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;IR Volume State可选值
&lt;ul&gt;
&lt;li&gt;Okay(OKY): 活跃、有效。如果配置的RAID级别能够提供一定的数据保护，那么此时用户数据就是受保护状态。&lt;/li&gt;
&lt;li&gt;Degraded(DGD): 活跃、有效。由于配置已经发生了改变或者物理驱动器中某些处于不可用状态，用户数据实际上处于不完全受保护状态。&lt;/li&gt;
&lt;li&gt;Failed(FLD): 失败。&lt;/li&gt;
&lt;li&gt;Missing(MIS): 缺失。&lt;/li&gt;
&lt;li&gt;Initializing(INIT): 初始化中。&lt;/li&gt;
&lt;li&gt;Online(ONL): 已上线。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical device State可选值
&lt;ul&gt;
&lt;li&gt;Online(ONL): 该物理驱动器是可用的并且已经是构成某个volume的一部分了。&lt;/li&gt;
&lt;li&gt;HotSpare(HSP): 该物理驱动器已经处于热备状态。一旦对应的volume中有物理驱动器发生故障不可用，该物理驱动器就会顶替发生故障的物理驱动器。&lt;/li&gt;
&lt;li&gt;Ready(RDY): 该物理驱动器已经处于预备(ready)状态，可以随时被当作一个普通的物理驱动器被使用，可以被分配到某个volume或者热备盘池(hot spare pool)。&lt;/li&gt;
&lt;li&gt;Available(AVL): 该物理驱动器可能并不处于预备(ready)状态，并且不适合作为volume的一个物理驱动器，也不适合作为热备盘池中的一员。&lt;/li&gt;
&lt;li&gt;Failed(FLD): 该物理驱动器发生故障或者已经下线。&lt;/li&gt;
&lt;li&gt;Missing(MIS): 该物理驱动器已经被移除或者处于无响应状态。&lt;/li&gt;
&lt;li&gt;Standby(SBY): 该设备不是一个硬盘设备。&lt;/li&gt;
&lt;li&gt;OutofSync(OSY): 该物理驱动器是某个volume的一部分，但是它并没有与同样是volume一部分的其他物理驱动器进行同步。&lt;/li&gt;
&lt;li&gt;Degraded(DGD): 该物理驱动器时某个volume的一部分并且处于降级(degraded)状态。&lt;/li&gt;
&lt;li&gt;Rebuilding(RBLD): 该物理驱动器时某个volume的一部分并且处于重建(rebuilding)状态。&lt;/li&gt;
&lt;li&gt;Optimal(OPT): 该物理驱动器时某个volume的一部分并且处于最优(optimal)状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical device的Drive Type属性可选值
&lt;ul&gt;
&lt;li&gt;SAS_HDD: 物理驱动器是SAS普通机械硬盘。&lt;/li&gt;
&lt;li&gt;SATA_HDD: 物理驱动器是SATA普通机械硬盘。&lt;/li&gt;
&lt;li&gt;SAS_SSD: 物理驱动器是SAS固态硬盘。&lt;/li&gt;
&lt;li&gt;SATA_SSD: 物理驱动器是SATA固态硬盘。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical device的Protocol属性可选值
&lt;ul&gt;
&lt;li&gt;SAS: 物理驱动器支持SAS协议。&lt;/li&gt;
&lt;li&gt;SATA: 物理驱动器支持SATA协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;hotspare命令&#34;&gt;HOTSPARE命令&lt;/h1&gt;
&lt;p&gt;该命令用来给热备池中添加或者删除一个物理驱动器。待添加的物理驱动器存储容量不能小于volume中各个物理驱动器存储容量最小的那个物理驱动器的存储容量。若想要确定各个物理驱动器的存储容量等信息，请参考DISPLAY命令。&lt;/p&gt;
&lt;p&gt;创建热备盘时须准守以下规则:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建热备盘前至少已经存在一个RAID级别为RAID 1、RAID 10、RAID 1E的volume。因为RAID 0不具备数据冗余特性，因此无法为此创建热备盘。&lt;/li&gt;
&lt;li&gt;可以为状态是inactive的volume创建热备盘。&lt;/li&gt;
&lt;li&gt;对于HDD而言，若当前controller上的所有volume使用的是SATA磁盘，那么可以添加SAS的热备盘。若当前controller上的所有volume使用的是SAS磁盘，则无法再添加SATA的热备盘。&lt;/li&gt;
&lt;li&gt;对于SSD而言，只要RAID卡固件允许，允许为SATA的volume添加SAS的热备盘，也可以为SAS的volume添加SATA的热备盘。&lt;/li&gt;
&lt;li&gt;每个controller最多添加2块热备盘。&lt;/li&gt;
&lt;li&gt;SSD可以作为HDD类型的volume的热备盘，HDD不可以作为SSD类型volume的热备盘。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;语法-5&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; hotspare [delete] &amp;lt;Enclosure:Bay&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数-4&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;Enclosure:Bay&#34;&gt;Enclosure:Bay&lt;/a&gt;: 硬盘盒编号+物理驱动器编号，可以唯一标识一块物理驱动器。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;status命令&#34;&gt;STATUS命令&lt;/h1&gt;
&lt;p&gt;该命令会显示当前已经存在volume，以及当前还在进行中的操作的状态。&lt;/p&gt;
&lt;h2 id=&#34;语法-6&#34;&gt;语法&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;sas3ircu &amp;lt;controller_#&amp;gt; status
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参数-5&#34;&gt;参数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;controller_#&amp;gt;: controller编号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;list命令&#34;&gt;LIST命令&lt;/h1&gt;
&lt;p&gt;该命令显示当前系统中的所有controller及其controller index组成的列表。&lt;/p&gt;
&lt;h2 id=&#34;语法-7&#34;&gt;语法&lt;/h2&gt;
&lt;p&gt;sas3ircu list&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.broadcom.com/docs/12353382&#34;&gt;SAS-3 Integrated RAID Configuration Utility (SAS3IRCU)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.huawei.com/enterprise/zh/doc/EDOC1000004345/b4b05091#it_server_sas3008_700035&#34;&gt;LSI SAS3008文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%A1%AC%E7%9B%98%E7%9B%92&#34;&gt;Disk Enclosure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%A1%AC%E7%9B%98&#34;&gt;HDD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98&#34;&gt;SSD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E4%B8%B2%E5%88%97SCSI&#34;&gt;SAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/SATA&#34;&gt;SATA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>git commit message后悔药</title>
      <link>http://voidint.github.io/post/tool/git-commit-amend/</link>
      <pubDate>Tue, 25 Feb 2020 16:33:19 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/tool/git-commit-amend/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/tool/git.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;场景描述&#34;&gt;场景描述&lt;/h1&gt;
&lt;p&gt;假设你创建了一个文件，并写入了一些内容，然后通过git add和git commit将此变更提交。提交之后才发现这个文件中少了一些内容，此时有两个选择摆在你面前：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将文件内容补全，然后和之前一样git add、git commit。显然，你可以通过git log看到这两条commit记录。&lt;/li&gt;
&lt;li&gt;回到过去，修改上一次提交的那个文件。如此一来，你的commit记录只会有一条。对于一些有代码洁癖并且看中git commit记录的程序员，这点很重要，特别是在开源项目中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;场景再现&#34;&gt;场景再现&lt;/h1&gt;
&lt;p&gt;初始化git仓库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mkdir &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git init
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第一次commit内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello world&amp;#39;&lt;/span&gt; &amp;gt; README.md
$ git add .
$ git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Add README.md&amp;#34;&lt;/span&gt;
$ git log --oneline
c56f680 Add README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改文件内容并合并到上一次的commit变更当中&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Hello voidint&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; README.md
$ git add .
$ git commit --amend --no-edit
$ git log --oneline
eb6c8cb Add README.md // hash值发生了变化
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到，在执行git commit &amp;ndash;amend &amp;ndash;no-edit之后，hash值由c56f680变成了eb6c8cb，但是message内容并没有发生变化，并且最重要的是只有一条commit记录。&lt;/p&gt;
&lt;p&gt;如果要修改上一条的message，那么去掉&amp;ndash;no-edit选项即可，git commit &amp;ndash;amend -m &amp;ldquo;xxxx&amp;rdquo;。同理，commit记录同样只会有一条。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>容器内MySQL时区调整</title>
      <link>http://voidint.github.io/post/container/docker-mysql-timezone/</link>
      <pubDate>Tue, 25 Feb 2020 16:08:07 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/container/docker-mysql-timezone/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/cloudnative/mysql-timezone.jpg&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;从docker hub拉取的MySQL官方docker镜像，启动MySQL容器后，执行&lt;code&gt;select now()&lt;/code&gt;语句，发现显示的时间与我宿主机的时间不一致且相差8小时。显然，需要重置MySQL的时区，将时区设置与宿主机保持一致，即东八区。&lt;/p&gt;
&lt;h1 id=&#34;如何为mysql设置时区&#34;&gt;如何为MySQL设置时区？&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html&#34;&gt;MySQL 5.7官方文档&lt;/a&gt;中提到了多种设置时区的方案，我们这里仅关注配置文件（MySQL官方称之为&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/option-files.html&#34;&gt;Option Files&lt;/a&gt;）的方案。&lt;/p&gt;
&lt;h2 id=&#34;配置文件中修改时区&#34;&gt;配置文件中修改时区&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;配置项default-time-zone及取值
依据文档可以通过在配置文件中增加default-time-zone=&amp;lsquo;timezone&amp;rsquo;的配置项来修改时区。配置值的取值遵循以下规则：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The value &amp;lsquo;SYSTEM&amp;rsquo; indicates that the time zone should be the same as the system time zone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The value can be given as a string indicating an offset from UTC, such as &amp;lsquo;+10:00&amp;rsquo; or &amp;lsquo;-6:00&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The value can be given as a named time zone, such as &amp;lsquo;Europe/Helsinki&amp;rsquo;, &amp;lsquo;US/Eastern&amp;rsquo;, or &amp;lsquo;MET&amp;rsquo;. Named time zones can be used only if the time zone information tables in the mysql database have been created and populated.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们选择第二种方式，通过UTC的偏移量来表示东八区，+8:00意味着在零时区的基础上往东偏移8个时区。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;group
官方文档中描述了配置文件的语法，包括注释、组、选项名、选项值等。其中组（group）是与我们当前遇到的问题息息相关的东西。配置项需要放置在正确的group下，官方表述如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If an option group name is the same as a program name, options in the group apply specifically to that program.
For example, the [mysqld] and [mysql] groups apply to the mysqld server and the mysql client program, respectively.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于配置项default-time-zone是为了让MySQL Server调整默认时区，并结合上面有关group的表述，不难得出一个结论：default-time-zone配置项应该放置在名为[mysqld]的group下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;mysqld&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
default-time_zone &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;+8:00&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;配置文件位置&#34;&gt;配置文件位置&lt;/h2&gt;
&lt;p&gt;既然已经明确了通过修改配置文件来达到重置MySQL时区的目的，那么修改后的配置文件放哪儿呢？这是首先面临的一个问题。好在MySQL官方文档中已经告诉我们配置文件的读取顺序。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;File Name&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Purpose&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/etc/my.cnf&lt;/td&gt;
&lt;td&gt;Global options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/etc/mysql/my.cnf&lt;/td&gt;
&lt;td&gt;Global options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;SYSCONFDIR&lt;/em&gt;/my.cnf&lt;/td&gt;
&lt;td&gt;Global options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$MYSQL_HOME/my.cnf&lt;/td&gt;
&lt;td&gt;Server-specific options (server only)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;defaults-extra-file&lt;/td&gt;
&lt;td&gt;The file specified with &lt;code&gt;--defaults-extra-file&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~/.my.cnf&lt;/td&gt;
&lt;td&gt;User-specific options&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~/.mylogin.cnf&lt;/td&gt;
&lt;td&gt;User-specific login path options (clients only)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;再尝试查看MySQL的docker容器中的配置文件，docker run &amp;ndash;rm mysql:5.7 cat /etc/mysql/my.cnf，我们看到了容器中的配置文件内容如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;# Copyright (c) 2016, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

!includedir /etc/mysql/conf.d/
!includedir /etc/mysql/mysql.conf.d/
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;这下这个疑问终于有了答案，我们可以将自定义的配置文件想办法放入容器中的/etc/mysql/conf.d/目录（放在/etc/mysql/mysql.conf.d/目录当然也同样OK）。&lt;/p&gt;
&lt;p&gt;注意：在*nix系统下使用!includedir指令指定的配置文件目录下的配置文件扩展名必须是.cnf，在Windows系统下的扩展名可以是.ini或者.cnf。&lt;/p&gt;
&lt;h2 id=&#34;启动mysql容器&#34;&gt;启动MySQL容器&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ docker run  -d --name mysql5.7 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v /Users/voidint/dockerV/mysql/5.7/conf:/etc/mysql/conf.d &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -e &lt;span class=&#34;nv&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;abc#123&amp;#39;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -p 3306:3306&lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    mysql:5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;参考MySQL官方docker镜像的说明，我们将上面步骤准备好的MySQL配置文件放置在/Users/voidint/dockerV/mysql/5.7/conf目录下，并通过docker -v选项将宿主机上的配置文件目录挂载到容器中的/etc/mysql/conf.d目录。这样在容器启动时就能读取到我们自定义的配置文件，时区配置也就生效了。&lt;/p&gt;
&lt;p&gt;容器启动后，通过MySQL客户端连接上MySQL，再次执行select now()语句以验证MySQL的时区是否与宿主机时区保持一致。&lt;/p&gt;
&lt;h1 id=&#34;参考&#34;&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html&#34;&gt;MySQL Server Time Zone Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/refman/5.7/en/option-files.html&#34;&gt;Using Option Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/mysql&#34;&gt;MySQL Docker镜像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>为什么mysql -h localhost无法登录了？</title>
      <link>http://voidint.github.io/post/db/mysql-login-localhost/</link>
      <pubDate>Tue, 25 Feb 2020 15:56:49 +0000</pubDate>
      
      <guid>http://voidint.github.io/post/db/mysql-login-localhost/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://voidint.github.io/db/localhost.png&#34; alt=&#34;题图&#34;&gt;&lt;/p&gt;
&lt;p&gt;我在自己的mac上安装了docker，并在docker中运行了mysql5.6容器。启动容器的方式大致如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ docker run --name mydb -d &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -p 3306:3306 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -v /Users/voidint/dockerV/mysql/data:/var/lib/mysql &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    -e &lt;span class=&#34;nv&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;xxxxx &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;    mysql:5.6
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;mysql服务正常启动之后，我想通过客户端连接此服务。于是，我顺理成章地在终端敲下了这样的命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mysql -u root -p
Enter password:
ERROR &lt;span class=&#34;m&#34;&gt;2002&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;HY000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: Can&lt;span class=&#34;s1&#34;&gt;&amp;#39;t connect to local MySQL server through socket &amp;#39;&lt;/span&gt;/tmp/mysql.sock&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;非常意外，居然报错了。我记得以前都是这样敲的呀？怎么换成跑在docker里就行不通了？不科学！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mysql -h localhost -uroot -p
Enter password:
ERROR &lt;span class=&#34;m&#34;&gt;2002&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;HY000&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;: Can&lt;span class=&#34;s1&#34;&gt;&amp;#39;t connect to local MySQL server through socket &amp;#39;&lt;/span&gt;/tmp/mysql.sock&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;加上&lt;code&gt;-h&lt;/code&gt;选项还是不行，气急败坏。气归气，问题还是要解决的，那就查查资料。然后，看到了这篇，在粗粗浏览过之后，发现有人建议用&lt;code&gt;-h 127.0.0.1&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mysql -h 127.0.0.1 -u root -p 
Enter password:
Reading table information &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; completion of table and column names
You can turn off this feature to get a quicker startup with -A

Welcome to the MySQL monitor.  Commands end with &lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; or &lt;span class=&#34;se&#34;&gt;\g&lt;/span&gt;.
Your MySQL connection id is &lt;span class=&#34;m&#34;&gt;3823&lt;/span&gt;
Server version: 5.6.35 MySQL Community Server &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;GPL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

Copyright &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;c&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; 2000, 2015, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &lt;span class=&#34;s1&#34;&gt;&amp;#39;help;&amp;#39;&lt;/span&gt; or &lt;span class=&#34;s1&#34;&gt;&amp;#39;\h&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; help. Type &lt;span class=&#34;s1&#34;&gt;&amp;#39;\c&amp;#39;&lt;/span&gt; to clear the current input statement.

mysql&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;试过之后，发现效果立竿见影。这简直颠覆了我的既有观念！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;难道localhost和127.0.0.1不是同一个东西？OMG！&lt;/li&gt;
&lt;li&gt;那个socket文件/tmp/mysql.sock又是怎么一回事，指定了127.0.0.1怎么就正常了？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在查阅了一些资料之后，终于对于这几个问题有了稍深入的理解：&lt;/p&gt;
&lt;h1 id=&#34;localhost和127001的区别&#34;&gt;localhost和127.0.0.1的区别&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;localhost和127.0.0.1，前者是域名，后者是IP地址中特殊的一类回还地址。&lt;/li&gt;
&lt;li&gt;许多时候localhost和127.0.0.1给人感觉是等价的，是由于在多数系统的/etc/hosts文件中，两者存在映射关系。&lt;/li&gt;
&lt;li&gt;本机上的服务，如果通过localhost访问，可以不经过网卡，并且不受防火墙的限制。如果不经过网卡，那客户端和服务端要如何通信？答案就是socket。比如上面例子中的/tmp/mysql.sock。也因为不需要经过网卡，不需要TCP/IP协议的层层封包和层层解包过程，性能上会更出色一些。&lt;/li&gt;
&lt;li&gt;本机上的服务，如果通过127.0.0.1访问，需要经过网卡，也可能受到防火墙限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/mysql/&#34;&gt;https://hub.docker.com/_/mysql/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/11657829/error-2002-hy000-cant-connect-to-local-mysql-server-through-socket-var-run&#34;&gt;http://stackoverflow.com/questions/11657829/error-2002-hy000-cant-connect-to-local-mysql-server-through-socket-var-run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.onlycatch.com/post/7e371ca28621&#34;&gt;http://blog.onlycatch.com/post/7e371ca28621&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://i.joymvp.com/%E6%8A%80%E6%9C%AF/routing-traffic-localhost.html&#34;&gt;http://i.joymvp.com/%E6%8A%80%E6%9C%AF/routing-traffic-localhost.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
  </channel>
</rss>
